
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fbc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000170  00800060  00000fbc  00001050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  008001d0  008001d0  000011c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  0000122c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026c7  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000779  00000000  00000000  00003993  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009a8  00000000  00000000  0000410c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  00004ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000411  00000000  00000000  00004bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022b3  00000000  00000000  00005001  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000072b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec eb       	ldi	r30, 0xBC	; 188
  3a:	ff e0       	ldi	r31, 0x0F	; 15
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 3d       	cpi	r26, 0xD0	; 208
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	21 e0       	ldi	r18, 0x01	; 1
  4a:	a0 ed       	ldi	r26, 0xD0	; 208
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	aa 3d       	cpi	r26, 0xDA	; 218
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	79 d3       	rcall	.+1778   	; 0x74c <main>
  5a:	ae c7       	rjmp	.+3932   	; 0xfb8 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <uart_init>:

unsigned int adcdata,adcdata1;

 void adc_init()
 {
  ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaler to 64
  5e:	1b b8       	out	0x0b, r1	; 11
  60:	10 bc       	out	0x20, r1	; 32
  62:	88 e0       	ldi	r24, 0x08	; 8
  64:	89 b9       	out	0x09, r24	; 9
  66:	88 e1       	ldi	r24, 0x18	; 24
  68:	8a b9       	out	0x0a, r24	; 10
  6a:	86 e8       	ldi	r24, 0x86	; 134
  6c:	80 bd       	out	0x20, r24	; 32
  6e:	08 95       	ret

00000070 <uart_char>:
  70:	5d 9b       	sbis	0x0b, 5	; 11
  72:	fe cf       	rjmp	.-4      	; 0x70 <uart_char>
  74:	8c b9       	out	0x0c, r24	; 12
  76:	08 95       	ret

00000078 <uart_string>:
  78:	cf 93       	push	r28
  7a:	df 93       	push	r29
  7c:	ec 01       	movw	r28, r24
  7e:	88 81       	ld	r24, Y
  80:	88 23       	and	r24, r24
  82:	29 f0       	breq	.+10     	; 0x8e <uart_string+0x16>
  84:	21 96       	adiw	r28, 0x01	; 1
  86:	f4 df       	rcall	.-24     	; 0x70 <uart_char>
  88:	89 91       	ld	r24, Y+
  8a:	81 11       	cpse	r24, r1
  8c:	fc cf       	rjmp	.-8      	; 0x86 <uart_string+0xe>
  8e:	87 ea       	ldi	r24, 0xA7	; 167
  90:	91 e6       	ldi	r25, 0x61	; 97
  92:	01 97       	sbiw	r24, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <uart_string+0x1a>
  96:	00 c0       	rjmp	.+0      	; 0x98 <uart_string+0x20>
  98:	00 00       	nop
  9a:	df 91       	pop	r29
  9c:	cf 91       	pop	r28
  9e:	08 95       	ret

000000a0 <uart_num>:
  a0:	cf 93       	push	r28
  a2:	df 93       	push	r29
  a4:	28 2f       	mov	r18, r24
  a6:	39 e2       	ldi	r19, 0x29	; 41
  a8:	83 9f       	mul	r24, r19
  aa:	31 2d       	mov	r19, r1
  ac:	11 24       	eor	r1, r1
  ae:	32 95       	swap	r19
  b0:	3f 70       	andi	r19, 0x0F	; 15
  b2:	4c e9       	ldi	r20, 0x9C	; 156
  b4:	43 03       	mulsu	r20, r19
  b6:	c0 01       	movw	r24, r0
  b8:	11 24       	eor	r1, r1
  ba:	82 0f       	add	r24, r18
  bc:	91 1d       	adc	r25, r1
  be:	6a e0       	ldi	r22, 0x0A	; 10
  c0:	70 e0       	ldi	r23, 0x00	; 0
  c2:	53 d7       	rcall	.+3750   	; 0xf6a <__divmodhi4>
  c4:	d6 2f       	mov	r29, r22
  c6:	20 5d       	subi	r18, 0xD0	; 208
  c8:	c2 2f       	mov	r28, r18
  ca:	34 9f       	mul	r19, r20
  cc:	c0 0d       	add	r28, r0
  ce:	11 24       	eor	r1, r1
  d0:	80 e3       	ldi	r24, 0x30	; 48
  d2:	83 0f       	add	r24, r19
  d4:	cd df       	rcall	.-102    	; 0x70 <uart_char>
  d6:	80 e3       	ldi	r24, 0x30	; 48
  d8:	8d 0f       	add	r24, r29
  da:	ca df       	rcall	.-108    	; 0x70 <uart_char>
  dc:	dd 0f       	add	r29, r29
  de:	8d 2f       	mov	r24, r29
  e0:	88 0f       	add	r24, r24
  e2:	88 0f       	add	r24, r24
  e4:	d8 0f       	add	r29, r24
  e6:	8c 2f       	mov	r24, r28
  e8:	8d 1b       	sub	r24, r29
  ea:	c2 df       	rcall	.-124    	; 0x70 <uart_char>
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <getdata>:
  		
 }
 unsigned char getdata(unsigned char chno)	
  {
    ADMUX=0X60;						//right align the ADC result
  f2:	90 e6       	ldi	r25, 0x60	; 96
  f4:	97 b9       	out	0x07, r25	; 7
    ADMUX|=chno;					//select the ADC channel
  f6:	97 b1       	in	r25, 0x07	; 7
  f8:	89 2b       	or	r24, r25
  fa:	87 b9       	out	0x07, r24	; 7
    ADCSRA|=0X40;					//start ADC convertion
  fc:	36 9a       	sbi	0x06, 6	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	89 ef       	ldi	r24, 0xF9	; 249
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <getdata+0x10>
 106:	00 c0       	rjmp	.+0      	; 0x108 <getdata+0x16>
 108:	00 00       	nop
    _delay_ms(1);					//give some time delay to complit the aDC convertion
	return ADCH;
 10a:	85 b1       	in	r24, 0x05	; 5
  }
 10c:	08 95       	ret

0000010e <HCSR04Init>:
void HCSR04Init();
void HCSR04Trigger();

void HCSR04Init()
{
	US_DDR|=(1<<US_TRIG_POS);
 10e:	a0 9a       	sbi	0x14, 0	; 20
 110:	08 95       	ret

00000112 <HCSR04Trigger>:

void HCSR04Trigger()
{
	//Send a 10uS pulse on trigger line
	
	US_PORT|=(1<<US_TRIG_POS);	//high
 112:	a8 9a       	sbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	85 e0       	ldi	r24, 0x05	; 5
 116:	8a 95       	dec	r24
 118:	f1 f7       	brne	.-4      	; 0x116 <HCSR04Trigger+0x4>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
 11a:	a8 98       	cbi	0x15, 0	; 21
 11c:	08 95       	ret

0000011e <GetPulseWidth>:
	uint32_t i,result;

	//Wait for the rising edge
	for(i=0;i<600000;i++)
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
 11e:	99 99       	sbic	0x13, 1	; 19
 120:	18 c0       	rjmp	.+48     	; 0x152 <GetPulseWidth+0x34>
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	a0 e0       	ldi	r26, 0x00	; 0
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	99 99       	sbic	0x13, 1	; 19
 12c:	0d c0       	rjmp	.+26     	; 0x148 <GetPulseWidth+0x2a>
uint16_t GetPulseWidth()
{
	uint32_t i,result;

	//Wait for the rising edge
	for(i=0;i<600000;i++)
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	a1 1d       	adc	r26, r1
 132:	b1 1d       	adc	r27, r1
 134:	80 3c       	cpi	r24, 0xC0	; 192
 136:	27 e2       	ldi	r18, 0x27	; 39
 138:	92 07       	cpc	r25, r18
 13a:	29 e0       	ldi	r18, 0x09	; 9
 13c:	a2 07       	cpc	r26, r18
 13e:	b1 05       	cpc	r27, r1
 140:	a1 f7       	brne	.-24     	; 0x12a <GetPulseWidth+0xc>
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	9f ef       	ldi	r25, 0xFF	; 255
 146:	08 95       	ret
		continue;	//Line is still low, so wait
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
 148:	80 3c       	cpi	r24, 0xC0	; 192
 14a:	97 42       	sbci	r25, 0x27	; 39
 14c:	a9 40       	sbci	r26, 0x09	; 9
 14e:	b1 05       	cpc	r27, r1
 150:	c9 f1       	breq	.+114    	; 0x1c4 <GetPulseWidth+0xa6>
	return US_ERROR;	//Indicates time out
	
	//High Edge Found

	//Setup Timer1
	TCCR1A=0X00;
 152:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);	//Prescaler = Fcpu/8
 154:	82 e0       	ldi	r24, 0x02	; 2
 156:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;			//Init counter
 158:	1d bc       	out	0x2d, r1	; 45
 15a:	1c bc       	out	0x2c, r1	; 44

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
	{
		if(US_PIN & (1<<US_ECHO_POS))
 15c:	99 9b       	sbis	0x13, 1	; 19
 15e:	22 c0       	rjmp	.+68     	; 0x1a4 <GetPulseWidth+0x86>
		{
			if(TCNT1 > 60000) break; else continue;
 160:	8c b5       	in	r24, 0x2c	; 44
 162:	9d b5       	in	r25, 0x2d	; 45
 164:	81 36       	cpi	r24, 0x61	; 97
 166:	9a 4e       	sbci	r25, 0xEA	; 234
 168:	e8 f4       	brcc	.+58     	; 0x1a4 <GetPulseWidth+0x86>
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	a0 e0       	ldi	r26, 0x00	; 0
 170:	b0 e0       	ldi	r27, 0x00	; 0
	TCNT1=0x00;			//Init counter

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
	{
		if(US_PIN & (1<<US_ECHO_POS))
 172:	99 9b       	sbis	0x13, 1	; 19
 174:	12 c0       	rjmp	.+36     	; 0x19a <GetPulseWidth+0x7c>
		{
			if(TCNT1 > 60000) break; else continue;
 176:	2c b5       	in	r18, 0x2c	; 44
 178:	3d b5       	in	r19, 0x2d	; 45
 17a:	21 36       	cpi	r18, 0x61	; 97
 17c:	3a 4e       	sbci	r19, 0xEA	; 234
 17e:	68 f4       	brcc	.+26     	; 0x19a <GetPulseWidth+0x7c>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);	//Prescaler = Fcpu/8
	TCNT1=0x00;			//Init counter

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	a1 1d       	adc	r26, r1
 184:	b1 1d       	adc	r27, r1
 186:	80 3c       	cpi	r24, 0xC0	; 192
 188:	27 e2       	ldi	r18, 0x27	; 39
 18a:	92 07       	cpc	r25, r18
 18c:	29 e0       	ldi	r18, 0x09	; 9
 18e:	a2 07       	cpc	r26, r18
 190:	b1 05       	cpc	r27, r1
 192:	79 f7       	brne	.-34     	; 0x172 <GetPulseWidth+0x54>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
 194:	8e ef       	ldi	r24, 0xFE	; 254
 196:	9f ef       	ldi	r25, 0xFF	; 255
 198:	08 95       	ret
		}
		else
		break;
	}

	if(i==600000)
 19a:	80 3c       	cpi	r24, 0xC0	; 192
 19c:	97 42       	sbci	r25, 0x27	; 39
 19e:	a9 40       	sbci	r26, 0x09	; 9
 1a0:	b1 05       	cpc	r27, r1
 1a2:	99 f0       	breq	.+38     	; 0x1ca <GetPulseWidth+0xac>
	return US_NO_OBSTACLE;	//Indicates time out

	//Falling edge found

	result=TCNT1;
 1a4:	8c b5       	in	r24, 0x2c	; 44
 1a6:	9d b5       	in	r25, 0x2d	; 45
 1a8:	a0 e0       	ldi	r26, 0x00	; 0
 1aa:	b0 e0       	ldi	r27, 0x00	; 0

	//Stop Timer
	TCCR1B=0x00;
 1ac:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
 1ae:	81 36       	cpi	r24, 0x61	; 97
 1b0:	2a ee       	ldi	r18, 0xEA	; 234
 1b2:	92 07       	cpc	r25, r18
 1b4:	a1 05       	cpc	r26, r1
 1b6:	b1 05       	cpc	r27, r1
 1b8:	58 f4       	brcc	.+22     	; 0x1d0 <GetPulseWidth+0xb2>
	return US_NO_OBSTACLE;	//No obstacle
	else
	return (result>>1);
 1ba:	b6 95       	lsr	r27
 1bc:	a7 95       	ror	r26
 1be:	97 95       	ror	r25
 1c0:	87 95       	ror	r24
 1c2:	08 95       	ret
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
 1c4:	8f ef       	ldi	r24, 0xFF	; 255
 1c6:	9f ef       	ldi	r25, 0xFF	; 255
 1c8:	08 95       	ret
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
 1ca:	8e ef       	ldi	r24, 0xFE	; 254
 1cc:	9f ef       	ldi	r25, 0xFF	; 255
 1ce:	08 95       	ret

	//Stop Timer
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;	//No obstacle
 1d0:	8e ef       	ldi	r24, 0xFE	; 254
 1d2:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
 1d4:	08 95       	ret

000001d6 <HCSR04Init1>:



void HCSR04Init1()
{
	US_DDR|=(1<<US_TRIG_POS1);
 1d6:	a0 9a       	sbi	0x14, 0	; 20
 1d8:	08 95       	ret

000001da <HCSR04Trigger1>:

void HCSR04Trigger1()
{
	//Send a 10uS pulse on trigger line
	
	US_PORT|=(1<<US_TRIG_POS1);	//high
 1da:	a8 9a       	sbi	0x15, 0	; 21
 1dc:	85 e0       	ldi	r24, 0x05	; 5
 1de:	8a 95       	dec	r24
 1e0:	f1 f7       	brne	.-4      	; 0x1de <HCSR04Trigger1+0x4>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS1);	//low
 1e2:	a8 98       	cbi	0x15, 0	; 21
 1e4:	08 95       	ret

000001e6 <GetPulseWidth1>:
	uint32_t i,result;

	//Wait for the rising edge
	for(i=0;i<600000;i++)
	{
		if(!(US_PIN & (1<<US_ECHO_POS1)))
 1e6:	9b 99       	sbic	0x13, 3	; 19
 1e8:	18 c0       	rjmp	.+48     	; 0x21a <GetPulseWidth1+0x34>
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	a0 e0       	ldi	r26, 0x00	; 0
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	9b 99       	sbic	0x13, 3	; 19
 1f4:	0d c0       	rjmp	.+26     	; 0x210 <GetPulseWidth1+0x2a>
uint16_t GetPulseWidth1()
{
	uint32_t i,result;

	//Wait for the rising edge
	for(i=0;i<600000;i++)
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	a1 1d       	adc	r26, r1
 1fa:	b1 1d       	adc	r27, r1
 1fc:	80 3c       	cpi	r24, 0xC0	; 192
 1fe:	27 e2       	ldi	r18, 0x27	; 39
 200:	92 07       	cpc	r25, r18
 202:	29 e0       	ldi	r18, 0x09	; 9
 204:	a2 07       	cpc	r26, r18
 206:	b1 05       	cpc	r27, r1
 208:	a1 f7       	brne	.-24     	; 0x1f2 <GetPulseWidth1+0xc>
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	9f ef       	ldi	r25, 0xFF	; 255
 20e:	08 95       	ret
		continue;	//Line is still low, so wait
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
 210:	80 3c       	cpi	r24, 0xC0	; 192
 212:	97 42       	sbci	r25, 0x27	; 39
 214:	a9 40       	sbci	r26, 0x09	; 9
 216:	b1 05       	cpc	r27, r1
 218:	c9 f1       	breq	.+114    	; 0x28c <GetPulseWidth1+0xa6>
	return US_ERROR;	//Indicates time out
	
	//High Edge Found

	//Setup Timer1
	TCCR1A=0X00;
 21a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);	//Prescaler = Fcpu/8
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;			//Init counter
 220:	1d bc       	out	0x2d, r1	; 45
 222:	1c bc       	out	0x2c, r1	; 44

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
	{
		if(US_PIN & (1<<US_ECHO_POS1))
 224:	9b 9b       	sbis	0x13, 3	; 19
 226:	22 c0       	rjmp	.+68     	; 0x26c <GetPulseWidth1+0x86>
		{
			if(TCNT1 > 60000) break; else continue;
 228:	8c b5       	in	r24, 0x2c	; 44
 22a:	9d b5       	in	r25, 0x2d	; 45
 22c:	81 36       	cpi	r24, 0x61	; 97
 22e:	9a 4e       	sbci	r25, 0xEA	; 234
 230:	e8 f4       	brcc	.+58     	; 0x26c <GetPulseWidth1+0x86>
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	a0 e0       	ldi	r26, 0x00	; 0
 238:	b0 e0       	ldi	r27, 0x00	; 0
	TCNT1=0x00;			//Init counter

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
	{
		if(US_PIN & (1<<US_ECHO_POS1))
 23a:	9b 9b       	sbis	0x13, 3	; 19
 23c:	12 c0       	rjmp	.+36     	; 0x262 <GetPulseWidth1+0x7c>
		{
			if(TCNT1 > 60000) break; else continue;
 23e:	2c b5       	in	r18, 0x2c	; 44
 240:	3d b5       	in	r19, 0x2d	; 45
 242:	21 36       	cpi	r18, 0x61	; 97
 244:	3a 4e       	sbci	r19, 0xEA	; 234
 246:	68 f4       	brcc	.+26     	; 0x262 <GetPulseWidth1+0x7c>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);	//Prescaler = Fcpu/8
	TCNT1=0x00;			//Init counter

	//Now wait for the falling edge
	for(i=0;i<600000;i++)
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	a1 1d       	adc	r26, r1
 24c:	b1 1d       	adc	r27, r1
 24e:	80 3c       	cpi	r24, 0xC0	; 192
 250:	27 e2       	ldi	r18, 0x27	; 39
 252:	92 07       	cpc	r25, r18
 254:	29 e0       	ldi	r18, 0x09	; 9
 256:	a2 07       	cpc	r26, r18
 258:	b1 05       	cpc	r27, r1
 25a:	79 f7       	brne	.-34     	; 0x23a <GetPulseWidth1+0x54>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
 25c:	8e ef       	ldi	r24, 0xFE	; 254
 25e:	9f ef       	ldi	r25, 0xFF	; 255
 260:	08 95       	ret
		}
		else
		break;
	}

	if(i==600000)
 262:	80 3c       	cpi	r24, 0xC0	; 192
 264:	97 42       	sbci	r25, 0x27	; 39
 266:	a9 40       	sbci	r26, 0x09	; 9
 268:	b1 05       	cpc	r27, r1
 26a:	99 f0       	breq	.+38     	; 0x292 <GetPulseWidth1+0xac>
	return US_NO_OBSTACLE;	//Indicates time out

	//Falling edge found

	result=TCNT1;
 26c:	8c b5       	in	r24, 0x2c	; 44
 26e:	9d b5       	in	r25, 0x2d	; 45
 270:	a0 e0       	ldi	r26, 0x00	; 0
 272:	b0 e0       	ldi	r27, 0x00	; 0

	//Stop Timer
	TCCR1B=0x00;
 274:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
 276:	81 36       	cpi	r24, 0x61	; 97
 278:	2a ee       	ldi	r18, 0xEA	; 234
 27a:	92 07       	cpc	r25, r18
 27c:	a1 05       	cpc	r26, r1
 27e:	b1 05       	cpc	r27, r1
 280:	58 f4       	brcc	.+22     	; 0x298 <GetPulseWidth1+0xb2>
	return US_NO_OBSTACLE;	//No obstacle
	else
	return (result>>1);
 282:	b6 95       	lsr	r27
 284:	a7 95       	ror	r26
 286:	97 95       	ror	r25
 288:	87 95       	ror	r24
 28a:	08 95       	ret
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
 28c:	8f ef       	ldi	r24, 0xFF	; 255
 28e:	9f ef       	ldi	r25, 0xFF	; 255
 290:	08 95       	ret
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
 292:	8e ef       	ldi	r24, 0xFE	; 254
 294:	9f ef       	ldi	r25, 0xFF	; 255
 296:	08 95       	ret

	//Stop Timer
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;	//No obstacle
 298:	8e ef       	ldi	r24, 0xFE	; 254
 29a:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
 29c:	08 95       	ret

0000029e <mydelay6>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29e:	2f eb       	ldi	r18, 0xBF	; 191
 2a0:	81 e9       	ldi	r24, 0x91	; 145
 2a2:	91 e2       	ldi	r25, 0x21	; 33
 2a4:	21 50       	subi	r18, 0x01	; 1
 2a6:	80 40       	sbci	r24, 0x00	; 0
 2a8:	90 40       	sbci	r25, 0x00	; 0
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <mydelay6+0x6>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <mydelay6+0x10>
 2ae:	00 00       	nop
 2b0:	2f eb       	ldi	r18, 0xBF	; 191
 2b2:	81 e9       	ldi	r24, 0x91	; 145
 2b4:	91 e2       	ldi	r25, 0x21	; 33
 2b6:	21 50       	subi	r18, 0x01	; 1
 2b8:	80 40       	sbci	r24, 0x00	; 0
 2ba:	90 40       	sbci	r25, 0x00	; 0
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <mydelay6+0x18>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <mydelay6+0x22>
 2c0:	00 00       	nop
 2c2:	2f eb       	ldi	r18, 0xBF	; 191
 2c4:	81 e9       	ldi	r24, 0x91	; 145
 2c6:	91 e2       	ldi	r25, 0x21	; 33
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <mydelay6+0x2a>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <mydelay6+0x34>
 2d2:	00 00       	nop
 2d4:	2f eb       	ldi	r18, 0xBF	; 191
 2d6:	81 e9       	ldi	r24, 0x91	; 145
 2d8:	91 e2       	ldi	r25, 0x21	; 33
 2da:	21 50       	subi	r18, 0x01	; 1
 2dc:	80 40       	sbci	r24, 0x00	; 0
 2de:	90 40       	sbci	r25, 0x00	; 0
 2e0:	e1 f7       	brne	.-8      	; 0x2da <mydelay6+0x3c>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <mydelay6+0x46>
 2e4:	00 00       	nop
 2e6:	2f eb       	ldi	r18, 0xBF	; 191
 2e8:	81 e9       	ldi	r24, 0x91	; 145
 2ea:	91 e2       	ldi	r25, 0x21	; 33
 2ec:	21 50       	subi	r18, 0x01	; 1
 2ee:	80 40       	sbci	r24, 0x00	; 0
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <mydelay6+0x4e>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <mydelay6+0x58>
 2f6:	00 00       	nop
 2f8:	2f eb       	ldi	r18, 0xBF	; 191
 2fa:	81 e9       	ldi	r24, 0x91	; 145
 2fc:	91 e2       	ldi	r25, 0x21	; 33
 2fe:	21 50       	subi	r18, 0x01	; 1
 300:	80 40       	sbci	r24, 0x00	; 0
 302:	90 40       	sbci	r25, 0x00	; 0
 304:	e1 f7       	brne	.-8      	; 0x2fe <mydelay6+0x60>
 306:	00 c0       	rjmp	.+0      	; 0x308 <mydelay6+0x6a>
 308:	00 00       	nop
 30a:	2f eb       	ldi	r18, 0xBF	; 191
 30c:	81 e9       	ldi	r24, 0x91	; 145
 30e:	91 e2       	ldi	r25, 0x21	; 33
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <mydelay6+0x72>
 318:	00 c0       	rjmp	.+0      	; 0x31a <mydelay6+0x7c>
 31a:	00 00       	nop
 31c:	2f eb       	ldi	r18, 0xBF	; 191
 31e:	81 e9       	ldi	r24, 0x91	; 145
 320:	91 e2       	ldi	r25, 0x21	; 33
 322:	21 50       	subi	r18, 0x01	; 1
 324:	80 40       	sbci	r24, 0x00	; 0
 326:	90 40       	sbci	r25, 0x00	; 0
 328:	e1 f7       	brne	.-8      	; 0x322 <mydelay6+0x84>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <mydelay6+0x8e>
 32c:	00 00       	nop
 32e:	2f eb       	ldi	r18, 0xBF	; 191
 330:	81 e9       	ldi	r24, 0x91	; 145
 332:	91 e2       	ldi	r25, 0x21	; 33
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <mydelay6+0x96>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <mydelay6+0xa0>
 33e:	00 00       	nop
 340:	2f eb       	ldi	r18, 0xBF	; 191
 342:	81 e9       	ldi	r24, 0x91	; 145
 344:	91 e2       	ldi	r25, 0x21	; 33
 346:	21 50       	subi	r18, 0x01	; 1
 348:	80 40       	sbci	r24, 0x00	; 0
 34a:	90 40       	sbci	r25, 0x00	; 0
 34c:	e1 f7       	brne	.-8      	; 0x346 <mydelay6+0xa8>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <mydelay6+0xb2>
 350:	00 00       	nop
 352:	2f eb       	ldi	r18, 0xBF	; 191
 354:	81 e9       	ldi	r24, 0x91	; 145
 356:	91 e2       	ldi	r25, 0x21	; 33
 358:	21 50       	subi	r18, 0x01	; 1
 35a:	80 40       	sbci	r24, 0x00	; 0
 35c:	90 40       	sbci	r25, 0x00	; 0
 35e:	e1 f7       	brne	.-8      	; 0x358 <mydelay6+0xba>
 360:	00 c0       	rjmp	.+0      	; 0x362 <mydelay6+0xc4>
 362:	00 00       	nop
 364:	2f eb       	ldi	r18, 0xBF	; 191
 366:	81 e9       	ldi	r24, 0x91	; 145
 368:	91 e2       	ldi	r25, 0x21	; 33
 36a:	21 50       	subi	r18, 0x01	; 1
 36c:	80 40       	sbci	r24, 0x00	; 0
 36e:	90 40       	sbci	r25, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <mydelay6+0xcc>
 372:	00 c0       	rjmp	.+0      	; 0x374 <mydelay6+0xd6>
 374:	00 00       	nop
 376:	2f eb       	ldi	r18, 0xBF	; 191
 378:	81 e9       	ldi	r24, 0x91	; 145
 37a:	91 e2       	ldi	r25, 0x21	; 33
 37c:	21 50       	subi	r18, 0x01	; 1
 37e:	80 40       	sbci	r24, 0x00	; 0
 380:	90 40       	sbci	r25, 0x00	; 0
 382:	e1 f7       	brne	.-8      	; 0x37c <mydelay6+0xde>
 384:	00 c0       	rjmp	.+0      	; 0x386 <mydelay6+0xe8>
 386:	00 00       	nop
 388:	2f eb       	ldi	r18, 0xBF	; 191
 38a:	81 e9       	ldi	r24, 0x91	; 145
 38c:	91 e2       	ldi	r25, 0x21	; 33
 38e:	21 50       	subi	r18, 0x01	; 1
 390:	80 40       	sbci	r24, 0x00	; 0
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	e1 f7       	brne	.-8      	; 0x38e <mydelay6+0xf0>
 396:	00 c0       	rjmp	.+0      	; 0x398 <mydelay6+0xfa>
 398:	00 00       	nop
 39a:	2f eb       	ldi	r18, 0xBF	; 191
 39c:	81 e9       	ldi	r24, 0x91	; 145
 39e:	91 e2       	ldi	r25, 0x21	; 33
 3a0:	21 50       	subi	r18, 0x01	; 1
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	90 40       	sbci	r25, 0x00	; 0
 3a6:	e1 f7       	brne	.-8      	; 0x3a0 <mydelay6+0x102>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <mydelay6+0x10c>
 3aa:	00 00       	nop
 3ac:	2f eb       	ldi	r18, 0xBF	; 191
 3ae:	81 e9       	ldi	r24, 0x91	; 145
 3b0:	91 e2       	ldi	r25, 0x21	; 33
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	80 40       	sbci	r24, 0x00	; 0
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <mydelay6+0x114>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <mydelay6+0x11e>
 3bc:	00 00       	nop
 3be:	2f eb       	ldi	r18, 0xBF	; 191
 3c0:	81 e9       	ldi	r24, 0x91	; 145
 3c2:	91 e2       	ldi	r25, 0x21	; 33
 3c4:	21 50       	subi	r18, 0x01	; 1
 3c6:	80 40       	sbci	r24, 0x00	; 0
 3c8:	90 40       	sbci	r25, 0x00	; 0
 3ca:	e1 f7       	brne	.-8      	; 0x3c4 <mydelay6+0x126>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <mydelay6+0x130>
 3ce:	00 00       	nop
 3d0:	2f eb       	ldi	r18, 0xBF	; 191
 3d2:	81 e9       	ldi	r24, 0x91	; 145
 3d4:	91 e2       	ldi	r25, 0x21	; 33
 3d6:	21 50       	subi	r18, 0x01	; 1
 3d8:	80 40       	sbci	r24, 0x00	; 0
 3da:	90 40       	sbci	r25, 0x00	; 0
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <mydelay6+0x138>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <mydelay6+0x142>
 3e0:	00 00       	nop
 3e2:	2f eb       	ldi	r18, 0xBF	; 191
 3e4:	81 e9       	ldi	r24, 0x91	; 145
 3e6:	91 e2       	ldi	r25, 0x21	; 33
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <mydelay6+0x14a>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <mydelay6+0x154>
 3f2:	00 00       	nop
 3f4:	2f eb       	ldi	r18, 0xBF	; 191
 3f6:	81 e9       	ldi	r24, 0x91	; 145
 3f8:	91 e2       	ldi	r25, 0x21	; 33
 3fa:	21 50       	subi	r18, 0x01	; 1
 3fc:	80 40       	sbci	r24, 0x00	; 0
 3fe:	90 40       	sbci	r25, 0x00	; 0
 400:	e1 f7       	brne	.-8      	; 0x3fa <mydelay6+0x15c>
 402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 404:	00 00       	nop
 406:	2f eb       	ldi	r18, 0xBF	; 191
 408:	81 e9       	ldi	r24, 0x91	; 145
 40a:	91 e2       	ldi	r25, 0x21	; 33
 40c:	21 50       	subi	r18, 0x01	; 1
 40e:	80 40       	sbci	r24, 0x00	; 0
 410:	90 40       	sbci	r25, 0x00	; 0
 412:	e1 f7       	brne	.-8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 416:	00 00       	nop
 418:	2f eb       	ldi	r18, 0xBF	; 191
 41a:	81 e9       	ldi	r24, 0x91	; 145
 41c:	91 e2       	ldi	r25, 0x21	; 33
 41e:	21 50       	subi	r18, 0x01	; 1
 420:	80 40       	sbci	r24, 0x00	; 0
 422:	90 40       	sbci	r25, 0x00	; 0
 424:	e1 f7       	brne	.-8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 426:	00 c0       	rjmp	.+0      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 428:	00 00       	nop
 42a:	2f eb       	ldi	r18, 0xBF	; 191
 42c:	81 e9       	ldi	r24, 0x91	; 145
 42e:	91 e2       	ldi	r25, 0x21	; 33
 430:	21 50       	subi	r18, 0x01	; 1
 432:	80 40       	sbci	r24, 0x00	; 0
 434:	90 40       	sbci	r25, 0x00	; 0
 436:	e1 f7       	brne	.-8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 438:	00 c0       	rjmp	.+0      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 43a:	00 00       	nop
 43c:	2f eb       	ldi	r18, 0xBF	; 191
 43e:	81 e9       	ldi	r24, 0x91	; 145
 440:	91 e2       	ldi	r25, 0x21	; 33
 442:	21 50       	subi	r18, 0x01	; 1
 444:	80 40       	sbci	r24, 0x00	; 0
 446:	90 40       	sbci	r25, 0x00	; 0
 448:	e1 f7       	brne	.-8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
 44e:	2f eb       	ldi	r18, 0xBF	; 191
 450:	81 e9       	ldi	r24, 0x91	; 145
 452:	91 e2       	ldi	r25, 0x21	; 33
 454:	21 50       	subi	r18, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45e:	00 00       	nop
 460:	2f eb       	ldi	r18, 0xBF	; 191
 462:	81 e9       	ldi	r24, 0x91	; 145
 464:	91 e2       	ldi	r25, 0x21	; 33
 466:	21 50       	subi	r18, 0x01	; 1
 468:	80 40       	sbci	r24, 0x00	; 0
 46a:	90 40       	sbci	r25, 0x00	; 0
 46c:	e1 f7       	brne	.-8      	; 0x466 <__stack+0x7>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <__stack+0x11>
 470:	00 00       	nop
 472:	2f eb       	ldi	r18, 0xBF	; 191
 474:	81 e9       	ldi	r24, 0x91	; 145
 476:	91 e2       	ldi	r25, 0x21	; 33
 478:	21 50       	subi	r18, 0x01	; 1
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	90 40       	sbci	r25, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <__stack+0x19>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__stack+0x23>
 482:	00 00       	nop
 484:	2f eb       	ldi	r18, 0xBF	; 191
 486:	81 e9       	ldi	r24, 0x91	; 145
 488:	91 e2       	ldi	r25, 0x21	; 33
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <__stack+0x2b>
 492:	00 c0       	rjmp	.+0      	; 0x494 <__stack+0x35>
 494:	00 00       	nop
 496:	2f eb       	ldi	r18, 0xBF	; 191
 498:	81 e9       	ldi	r24, 0x91	; 145
 49a:	91 e2       	ldi	r25, 0x21	; 33
 49c:	21 50       	subi	r18, 0x01	; 1
 49e:	80 40       	sbci	r24, 0x00	; 0
 4a0:	90 40       	sbci	r25, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <__stack+0x3d>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__stack+0x47>
 4a6:	00 00       	nop
 4a8:	2f eb       	ldi	r18, 0xBF	; 191
 4aa:	81 e9       	ldi	r24, 0x91	; 145
 4ac:	91 e2       	ldi	r25, 0x21	; 33
 4ae:	21 50       	subi	r18, 0x01	; 1
 4b0:	80 40       	sbci	r24, 0x00	; 0
 4b2:	90 40       	sbci	r25, 0x00	; 0
 4b4:	e1 f7       	brne	.-8      	; 0x4ae <__stack+0x4f>
 4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <__stack+0x59>
 4b8:	00 00       	nop
 4ba:	2f eb       	ldi	r18, 0xBF	; 191
 4bc:	81 e9       	ldi	r24, 0x91	; 145
 4be:	91 e2       	ldi	r25, 0x21	; 33
 4c0:	21 50       	subi	r18, 0x01	; 1
 4c2:	80 40       	sbci	r24, 0x00	; 0
 4c4:	90 40       	sbci	r25, 0x00	; 0
 4c6:	e1 f7       	brne	.-8      	; 0x4c0 <__stack+0x61>
 4c8:	00 c0       	rjmp	.+0      	; 0x4ca <__stack+0x6b>
 4ca:	00 00       	nop
 4cc:	2f eb       	ldi	r18, 0xBF	; 191
 4ce:	81 e9       	ldi	r24, 0x91	; 145
 4d0:	91 e2       	ldi	r25, 0x21	; 33
 4d2:	21 50       	subi	r18, 0x01	; 1
 4d4:	80 40       	sbci	r24, 0x00	; 0
 4d6:	90 40       	sbci	r25, 0x00	; 0
 4d8:	e1 f7       	brne	.-8      	; 0x4d2 <__stack+0x73>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <__stack+0x7d>
 4dc:	00 00       	nop
 4de:	2f eb       	ldi	r18, 0xBF	; 191
 4e0:	81 e9       	ldi	r24, 0x91	; 145
 4e2:	91 e2       	ldi	r25, 0x21	; 33
 4e4:	21 50       	subi	r18, 0x01	; 1
 4e6:	80 40       	sbci	r24, 0x00	; 0
 4e8:	90 40       	sbci	r25, 0x00	; 0
 4ea:	e1 f7       	brne	.-8      	; 0x4e4 <__stack+0x85>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <__stack+0x8f>
 4ee:	00 00       	nop
 4f0:	2f eb       	ldi	r18, 0xBF	; 191
 4f2:	81 e9       	ldi	r24, 0x91	; 145
 4f4:	91 e2       	ldi	r25, 0x21	; 33
 4f6:	21 50       	subi	r18, 0x01	; 1
 4f8:	80 40       	sbci	r24, 0x00	; 0
 4fa:	90 40       	sbci	r25, 0x00	; 0
 4fc:	e1 f7       	brne	.-8      	; 0x4f6 <__stack+0x97>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <__stack+0xa1>
 500:	00 00       	nop
 502:	2f eb       	ldi	r18, 0xBF	; 191
 504:	81 e9       	ldi	r24, 0x91	; 145
 506:	91 e2       	ldi	r25, 0x21	; 33
 508:	21 50       	subi	r18, 0x01	; 1
 50a:	80 40       	sbci	r24, 0x00	; 0
 50c:	90 40       	sbci	r25, 0x00	; 0
 50e:	e1 f7       	brne	.-8      	; 0x508 <__stack+0xa9>
 510:	00 c0       	rjmp	.+0      	; 0x512 <__stack+0xb3>
 512:	00 00       	nop
 514:	08 95       	ret

00000516 <checkChemical>:
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
}
int checkChemical()
{
			HCSR04Trigger();
 516:	fd dd       	rcall	.-1030   	; 0x112 <HCSR04Trigger>
 518:	2f e3       	ldi	r18, 0x3F	; 63
 51a:	82 e4       	ldi	r24, 0x42	; 66
 51c:	9f e0       	ldi	r25, 0x0F	; 15
 51e:	21 50       	subi	r18, 0x01	; 1
 520:	80 40       	sbci	r24, 0x00	; 0
 522:	90 40       	sbci	r25, 0x00	; 0
 524:	e1 f7       	brne	.-8      	; 0x51e <checkChemical+0x8>
 526:	00 c0       	rjmp	.+0      	; 0x528 <checkChemical+0x12>
 528:	00 00       	nop
			_delay_ms(5000);
			//Measure the width of pulse
			r=GetPulseWidth();
 52a:	f9 dd       	rcall	.-1038   	; 0x11e <GetPulseWidth>
 52c:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <r+0x1>
 530:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <r>
			//Handle Errors
			if(r==US_ERROR)
			{
				//LCDWriteStringXY(0,0,"Error !");
			}
			else if(r==US_NO_OBSTACLE)
 534:	9c 01       	movw	r18, r24
 536:	2e 5f       	subi	r18, 0xFE	; 254
 538:	3f 4f       	sbci	r19, 0xFF	; 255
 53a:	22 30       	cpi	r18, 0x02	; 2
 53c:	31 05       	cpc	r19, r1
 53e:	e0 f0       	brcs	.+56     	; 0x578 <checkChemical+0x62>
			{
				
				int d;

				d=(r/58.0)-1;	//Convert to cm
				out1=d;
 540:	bc 01       	movw	r22, r24
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	83 d4       	rcall	.+2310   	; 0xe4e <__floatunsisf>
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	48 e6       	ldi	r20, 0x68	; 104
 54e:	52 e4       	ldi	r21, 0x42	; 66
 550:	e5 d3       	rcall	.+1994   	; 0xd1c <__divsf3>
 552:	20 e0       	ldi	r18, 0x00	; 0
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	40 e8       	ldi	r20, 0x80	; 128
 558:	5f e3       	ldi	r21, 0x3F	; 63
 55a:	7b d3       	rcall	.+1782   	; 0xc52 <__subsf3>
 55c:	47 d4       	rcall	.+2190   	; 0xdec <__fixsfsi>
 55e:	70 93 d3 01 	sts	0x01D3, r23	; 0x8001d3 <out1+0x1>
 562:	60 93 d2 01 	sts	0x01D2, r22	; 0x8001d2 <out1>
 566:	2f e9       	ldi	r18, 0x9F	; 159
 568:	86 e8       	ldi	r24, 0x86	; 134
 56a:	91 e0       	ldi	r25, 0x01	; 1
 56c:	21 50       	subi	r18, 0x01	; 1
 56e:	80 40       	sbci	r24, 0x00	; 0
 570:	90 40       	sbci	r25, 0x00	; 0
 572:	e1 f7       	brne	.-8      	; 0x56c <checkChemical+0x56>
 574:	00 c0       	rjmp	.+0      	; 0x576 <checkChemical+0x60>
 576:	00 00       	nop

				_delay_ms(500);
			}
			
			HCSR04Trigger1();
 578:	30 de       	rcall	.-928    	; 0x1da <HCSR04Trigger1>
			//Measure the width of pulse
			r=GetPulseWidth1();
 57a:	35 de       	rcall	.-918    	; 0x1e6 <GetPulseWidth1>
 57c:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <r+0x1>
 580:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <r>
			//Handle Errors
			if(r==US_ERROR)
			{
				//LCDWriteStringXY(0,0,"Error !");
			}
			else if(r==US_NO_OBSTACLE)
 584:	9c 01       	movw	r18, r24
 586:	2e 5f       	subi	r18, 0xFE	; 254
 588:	3f 4f       	sbci	r19, 0xFF	; 255
 58a:	22 30       	cpi	r18, 0x02	; 2
 58c:	31 05       	cpc	r19, r1
 58e:	e0 f0       	brcs	.+56     	; 0x5c8 <checkChemical+0xb2>
			{
				
				int d;

				d=(r/58.0)-1;
				out2=d;	//Convert to cm
 590:	bc 01       	movw	r22, r24
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	5b d4       	rcall	.+2230   	; 0xe4e <__floatunsisf>
 598:	20 e0       	ldi	r18, 0x00	; 0
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	48 e6       	ldi	r20, 0x68	; 104
 59e:	52 e4       	ldi	r21, 0x42	; 66
 5a0:	bd d3       	rcall	.+1914   	; 0xd1c <__divsf3>
 5a2:	20 e0       	ldi	r18, 0x00	; 0
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	40 e8       	ldi	r20, 0x80	; 128
 5a8:	5f e3       	ldi	r21, 0x3F	; 63
 5aa:	53 d3       	rcall	.+1702   	; 0xc52 <__subsf3>
 5ac:	1f d4       	rcall	.+2110   	; 0xdec <__fixsfsi>
 5ae:	70 93 d1 01 	sts	0x01D1, r23	; 0x8001d1 <__data_end+0x1>
 5b2:	60 93 d0 01 	sts	0x01D0, r22	; 0x8001d0 <__data_end>
 5b6:	2f e9       	ldi	r18, 0x9F	; 159
 5b8:	86 e8       	ldi	r24, 0x86	; 134
 5ba:	91 e0       	ldi	r25, 0x01	; 1
 5bc:	21 50       	subi	r18, 0x01	; 1
 5be:	80 40       	sbci	r24, 0x00	; 0
 5c0:	90 40       	sbci	r25, 0x00	; 0
 5c2:	e1 f7       	brne	.-8      	; 0x5bc <checkChemical+0xa6>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <checkChemical+0xb0>
 5c6:	00 00       	nop
		//	uart_num(out1);
			//uart_string(" cm\t");
			//uart_num(out2);
			//uart_string(" CM\n");
			
		if(out1!=7)	
 5c8:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <out1>
 5cc:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <out1+0x1>
 5d0:	07 97       	sbiw	r24, 0x07	; 7
 5d2:	19 f0       	breq	.+6      	; 0x5da <checkChemical+0xc4>
			uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 5d4:	82 e6       	ldi	r24, 0x62	; 98
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	4f dd       	rcall	.-1378   	; 0x78 <uart_string>
 5da:	2f e7       	ldi	r18, 0x7F	; 127
 5dc:	8a e1       	ldi	r24, 0x1A	; 26
 5de:	96 e0       	ldi	r25, 0x06	; 6
 5e0:	21 50       	subi	r18, 0x01	; 1
 5e2:	80 40       	sbci	r24, 0x00	; 0
 5e4:	90 40       	sbci	r25, 0x00	; 0
 5e6:	e1 f7       	brne	.-8      	; 0x5e0 <checkChemical+0xca>
 5e8:	00 c0       	rjmp	.+0      	; 0x5ea <checkChemical+0xd4>
 5ea:	00 00       	nop
			_delay_ms(2000);
			uart_string("AT+CIPSEND=51\r\n");
 5ec:	8e e8       	ldi	r24, 0x8E	; 142
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	43 dd       	rcall	.-1402   	; 0x78 <uart_string>
 5f2:	87 ea       	ldi	r24, 0xA7	; 167
 5f4:	91 e6       	ldi	r25, 0x61	; 97
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	f1 f7       	brne	.-4      	; 0x5f6 <checkChemical+0xe0>
 5fa:	00 c0       	rjmp	.+0      	; 0x5fc <checkChemical+0xe6>
 5fc:	00 00       	nop
			_delay_ms(100);
			uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field1=");
 5fe:	8e e9       	ldi	r24, 0x9E	; 158
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	3a dd       	rcall	.-1420   	; 0x78 <uart_string>
			uart_num(out1);
 604:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <out1>
 608:	4b dd       	rcall	.-1386   	; 0xa0 <uart_num>
			uart_string("\r\n");
 60a:	86 e4       	ldi	r24, 0x46	; 70
 60c:	91 e0       	ldi	r25, 0x01	; 1
 60e:	34 dd       	rcall	.-1432   	; 0x78 <uart_string>
 610:	87 ea       	ldi	r24, 0xA7	; 167
 612:	91 e6       	ldi	r25, 0x61	; 97
 614:	01 97       	sbiw	r24, 0x01	; 1
 616:	f1 f7       	brne	.-4      	; 0x614 <checkChemical+0xfe>
 618:	00 c0       	rjmp	.+0      	; 0x61a <checkChemical+0x104>
 61a:	00 00       	nop
			_delay_ms(100);
			uart_string("AT+CIPCLOSE\r\n");
 61c:	8b ec       	ldi	r24, 0xCB	; 203
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	2b dd       	rcall	.-1450   	; 0x78 <uart_string>
			
		if(out2!=6)	
 622:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__data_end>
 626:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <__data_end+0x1>
 62a:	06 97       	sbiw	r24, 0x06	; 6
 62c:	19 f0       	breq	.+6      	; 0x634 <checkChemical+0x11e>
			uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 62e:	82 e6       	ldi	r24, 0x62	; 98
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	22 dd       	rcall	.-1468   	; 0x78 <uart_string>
 634:	9f e7       	ldi	r25, 0x7F	; 127
 636:	2a e1       	ldi	r18, 0x1A	; 26
 638:	86 e0       	ldi	r24, 0x06	; 6
 63a:	91 50       	subi	r25, 0x01	; 1
 63c:	20 40       	sbci	r18, 0x00	; 0
 63e:	80 40       	sbci	r24, 0x00	; 0
 640:	e1 f7       	brne	.-8      	; 0x63a <checkChemical+0x124>
 642:	00 c0       	rjmp	.+0      	; 0x644 <checkChemical+0x12e>
 644:	00 00       	nop
			_delay_ms(2000);
			uart_string("AT+CIPSEND=51\r\n");
 646:	8e e8       	ldi	r24, 0x8E	; 142
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	16 dd       	rcall	.-1492   	; 0x78 <uart_string>
 64c:	87 ea       	ldi	r24, 0xA7	; 167
 64e:	91 e6       	ldi	r25, 0x61	; 97
 650:	01 97       	sbiw	r24, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <checkChemical+0x13a>
 654:	00 c0       	rjmp	.+0      	; 0x656 <checkChemical+0x140>
 656:	00 00       	nop
			_delay_ms(100);
			uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field2=");
 658:	89 ed       	ldi	r24, 0xD9	; 217
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0d dd       	rcall	.-1510   	; 0x78 <uart_string>
			uart_num(out2);
 65e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__data_end>
 662:	1e dd       	rcall	.-1476   	; 0xa0 <uart_num>
			uart_string("\r\n");
 664:	86 e4       	ldi	r24, 0x46	; 70
 666:	91 e0       	ldi	r25, 0x01	; 1
 668:	07 dd       	rcall	.-1522   	; 0x78 <uart_string>
 66a:	87 ea       	ldi	r24, 0xA7	; 167
 66c:	91 e6       	ldi	r25, 0x61	; 97
 66e:	01 97       	sbiw	r24, 0x01	; 1
 670:	f1 f7       	brne	.-4      	; 0x66e <checkChemical+0x158>
 672:	00 c0       	rjmp	.+0      	; 0x674 <checkChemical+0x15e>
 674:	00 00       	nop
			_delay_ms(100);
			uart_string("AT+CIPCLOSE\r\n");
 676:	8b ec       	ldi	r24, 0xCB	; 203
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	fe dc       	rcall	.-1540   	; 0x78 <uart_string>
			
			
if(out2==6&&out1==7){
 67c:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__data_end>
 680:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <__data_end+0x1>
 684:	06 97       	sbiw	r24, 0x06	; 6
 686:	09 f0       	breq	.+2      	; 0x68a <checkChemical+0x174>
 688:	5b c0       	rjmp	.+182    	; 0x740 <checkChemical+0x22a>
 68a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <out1>
 68e:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <out1+0x1>
 692:	07 97       	sbiw	r24, 0x07	; 7
 694:	09 f0       	breq	.+2      	; 0x698 <checkChemical+0x182>
 696:	57 c0       	rjmp	.+174    	; 0x746 <checkChemical+0x230>
			PORTD |= (1<<7);
 698:	97 9a       	sbi	0x12, 7	; 18
			mydelay6();				
 69a:	01 de       	rcall	.-1022   	; 0x29e <mydelay6>
			uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 69c:	82 e6       	ldi	r24, 0x62	; 98
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	eb dc       	rcall	.-1578   	; 0x78 <uart_string>
 6a2:	9f e7       	ldi	r25, 0x7F	; 127
 6a4:	2a e1       	ldi	r18, 0x1A	; 26
 6a6:	86 e0       	ldi	r24, 0x06	; 6
 6a8:	91 50       	subi	r25, 0x01	; 1
 6aa:	20 40       	sbci	r18, 0x00	; 0
 6ac:	80 40       	sbci	r24, 0x00	; 0
 6ae:	e1 f7       	brne	.-8      	; 0x6a8 <checkChemical+0x192>
 6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <checkChemical+0x19c>
 6b2:	00 00       	nop
			_delay_ms(2000);
			uart_string("AT+CIPSEND=51\r\n");
 6b4:	8e e8       	ldi	r24, 0x8E	; 142
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	df dc       	rcall	.-1602   	; 0x78 <uart_string>
 6ba:	87 ea       	ldi	r24, 0xA7	; 167
 6bc:	91 e6       	ldi	r25, 0x61	; 97
 6be:	01 97       	sbiw	r24, 0x01	; 1
 6c0:	f1 f7       	brne	.-4      	; 0x6be <checkChemical+0x1a8>
 6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <checkChemical+0x1ae>
 6c4:	00 00       	nop
			_delay_ms(100);
			uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field2=");
 6c6:	89 ed       	ldi	r24, 0xD9	; 217
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	d6 dc       	rcall	.-1620   	; 0x78 <uart_string>
			uart_num(out2);
 6cc:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__data_end>
 6d0:	e7 dc       	rcall	.-1586   	; 0xa0 <uart_num>
			uart_string("\r\n");
 6d2:	86 e4       	ldi	r24, 0x46	; 70
 6d4:	91 e0       	ldi	r25, 0x01	; 1
 6d6:	d0 dc       	rcall	.-1632   	; 0x78 <uart_string>
 6d8:	87 ea       	ldi	r24, 0xA7	; 167
 6da:	91 e6       	ldi	r25, 0x61	; 97
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <checkChemical+0x1c6>
 6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <checkChemical+0x1cc>
 6e2:	00 00       	nop
			_delay_ms(100);
			uart_string("AT+CIPCLOSE\r\n");
 6e4:	8b ec       	ldi	r24, 0xCB	; 203
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	c7 dc       	rcall	.-1650   	; 0x78 <uart_string>
	mydelay6();
 6ea:	d9 dd       	rcall	.-1102   	; 0x29e <mydelay6>
	uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 6ec:	82 e6       	ldi	r24, 0x62	; 98
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	c3 dc       	rcall	.-1658   	; 0x78 <uart_string>
 6f2:	9f e7       	ldi	r25, 0x7F	; 127
 6f4:	2a e1       	ldi	r18, 0x1A	; 26
 6f6:	86 e0       	ldi	r24, 0x06	; 6
 6f8:	91 50       	subi	r25, 0x01	; 1
 6fa:	20 40       	sbci	r18, 0x00	; 0
 6fc:	80 40       	sbci	r24, 0x00	; 0
 6fe:	e1 f7       	brne	.-8      	; 0x6f8 <checkChemical+0x1e2>
 700:	00 c0       	rjmp	.+0      	; 0x702 <checkChemical+0x1ec>
 702:	00 00       	nop
	_delay_ms(2000);
	uart_string("AT+CIPSEND=51\r\n");
 704:	8e e8       	ldi	r24, 0x8E	; 142
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	b7 dc       	rcall	.-1682   	; 0x78 <uart_string>
 70a:	87 ea       	ldi	r24, 0xA7	; 167
 70c:	91 e6       	ldi	r25, 0x61	; 97
 70e:	01 97       	sbiw	r24, 0x01	; 1
 710:	f1 f7       	brne	.-4      	; 0x70e <checkChemical+0x1f8>
 712:	00 c0       	rjmp	.+0      	; 0x714 <checkChemical+0x1fe>
 714:	00 00       	nop
	_delay_ms(100);
	uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field1=");
 716:	8e e9       	ldi	r24, 0x9E	; 158
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	ae dc       	rcall	.-1700   	; 0x78 <uart_string>
	uart_num(out1);
 71c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <out1>
 720:	bf dc       	rcall	.-1666   	; 0xa0 <uart_num>
	uart_string("\r\n");
 722:	86 e4       	ldi	r24, 0x46	; 70
 724:	91 e0       	ldi	r25, 0x01	; 1
 726:	a8 dc       	rcall	.-1712   	; 0x78 <uart_string>
 728:	87 ea       	ldi	r24, 0xA7	; 167
 72a:	91 e6       	ldi	r25, 0x61	; 97
 72c:	01 97       	sbiw	r24, 0x01	; 1
 72e:	f1 f7       	brne	.-4      	; 0x72c <checkChemical+0x216>
 730:	00 c0       	rjmp	.+0      	; 0x732 <checkChemical+0x21c>
 732:	00 00       	nop
	_delay_ms(100);
	uart_string("AT+CIPCLOSE\r\n");
 734:	8b ec       	ldi	r24, 0xCB	; 203
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	9f dc       	rcall	.-1730   	; 0x78 <uart_string>

return 1;
 73a:	81 e0       	ldi	r24, 0x01	; 1
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	08 95       	ret
}
else
return 0;
 740:	80 e0       	ldi	r24, 0x00	; 0
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	08 95       	ret
 746:	80 e0       	ldi	r24, 0x00	; 0
 748:	90 e0       	ldi	r25, 0x00	; 0
}
 74a:	08 95       	ret

0000074c <main>:


int main(void)
{  
			HCSR04Init();
 74c:	e0 dc       	rcall	.-1600   	; 0x10e <HCSR04Init>
		HCSR04Init1();
 74e:	43 dd       	rcall	.-1402   	; 0x1d6 <HCSR04Init1>
 750:	2f e1       	ldi	r18, 0x1F	; 31
 752:	81 ea       	ldi	r24, 0xA1	; 161
 754:	97 e0       	ldi	r25, 0x07	; 7
 756:	21 50       	subi	r18, 0x01	; 1
 758:	80 40       	sbci	r24, 0x00	; 0
 75a:	90 40       	sbci	r25, 0x00	; 0
 75c:	e1 f7       	brne	.-8      	; 0x756 <main+0xa>
 75e:	00 c0       	rjmp	.+0      	; 0x760 <main+0x14>
 760:	00 00       	nop
		_delay_ms(2500);

	
	DDRB |=0xff;
 762:	87 b3       	in	r24, 0x17	; 23
 764:	8f ef       	ldi	r24, 0xFF	; 255
 766:	87 bb       	out	0x17, r24	; 23
	DDRD |=0xff;
 768:	91 b3       	in	r25, 0x11	; 17
 76a:	81 bb       	out	0x11, r24	; 17
		TCNT1 = 0;		/* Set timer1 count zero */
 76c:	1d bc       	out	0x2d, r1	; 45
 76e:	1c bc       	out	0x2c, r1	; 44
		ICR1 = 2499;		/* Set TOP count for timer1 in ICR1 register */
 770:	83 ec       	ldi	r24, 0xC3	; 195
 772:	99 e0       	ldi	r25, 0x09	; 9
 774:	97 bd       	out	0x27, r25	; 39
 776:	86 bd       	out	0x26, r24	; 38
		/* Set Fast PWM, TOP in ICR1, Clear OC1A on compare match, clk/64 */
		TCCR1A = (1<<WGM11)|(1<<COM1A1);
 778:	82 e8       	ldi	r24, 0x82	; 130
 77a:	8f bd       	out	0x2f, r24	; 47
		TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
 77c:	8b e1       	ldi	r24, 0x1B	; 27
 77e:	8e bd       	out	0x2e, r24	; 46

unsigned int adcdata,adcdata1;

 void adc_init()
 {
  ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaler to 64
 780:	86 e8       	ldi	r24, 0x86	; 134
 782:	86 b9       	out	0x06, r24	; 6
		
	int f1=0;
	unsigned char chemcheck,val=150,ldr=0,ir=0,temp=0;
	   adc_init();
	   uart_init();
 784:	6c dc       	rcall	.-1832   	; 0x5e <uart_init>
			uart_string("AT+RST\r\n");
 786:	86 e0       	ldi	r24, 0x06	; 6
 788:	91 e0       	ldi	r25, 0x01	; 1
 78a:	76 dc       	rcall	.-1812   	; 0x78 <uart_string>
 78c:	2f e3       	ldi	r18, 0x3F	; 63
 78e:	82 e4       	ldi	r24, 0x42	; 66
 790:	9f e0       	ldi	r25, 0x0F	; 15
 792:	21 50       	subi	r18, 0x01	; 1
 794:	80 40       	sbci	r24, 0x00	; 0
 796:	90 40       	sbci	r25, 0x00	; 0
 798:	e1 f7       	brne	.-8      	; 0x792 <main+0x46>
 79a:	00 c0       	rjmp	.+0      	; 0x79c <main+0x50>
 79c:	00 00       	nop
			_delay_ms(5000);
		
			uart_string("ATE0\r\n");
 79e:	8f e0       	ldi	r24, 0x0F	; 15
 7a0:	91 e0       	ldi	r25, 0x01	; 1
 7a2:	6a dc       	rcall	.-1836   	; 0x78 <uart_string>
		
			uart_string("AT+CWMODE_DEF=3\r\n");
 7a4:	86 e1       	ldi	r24, 0x16	; 22
 7a6:	91 e0       	ldi	r25, 0x01	; 1
 7a8:	67 dc       	rcall	.-1842   	; 0x78 <uart_string>
 7aa:	87 ea       	ldi	r24, 0xA7	; 167
 7ac:	91 e6       	ldi	r25, 0x61	; 97
 7ae:	01 97       	sbiw	r24, 0x01	; 1
 7b0:	f1 f7       	brne	.-4      	; 0x7ae <main+0x62>
 7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <main+0x68>
 7b4:	00 00       	nop
			_delay_ms(100);
		
			//_delay_ms(100);
			//uart_string("AT+CIPSTO=10");
			uart_string("AT+CWJAP_DEF=\"test\",\"12345678\"\r\n");
 7b6:	88 e2       	ldi	r24, 0x28	; 40
 7b8:	91 e0       	ldi	r25, 0x01	; 1
 7ba:	5e dc       	rcall	.-1860   	; 0x78 <uart_string>
 7bc:	9f e3       	ldi	r25, 0x3F	; 63
 7be:	22 e4       	ldi	r18, 0x42	; 66
 7c0:	8f e0       	ldi	r24, 0x0F	; 15
 7c2:	91 50       	subi	r25, 0x01	; 1
 7c4:	20 40       	sbci	r18, 0x00	; 0
 7c6:	80 40       	sbci	r24, 0x00	; 0
 7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0x76>
 7ca:	00 c0       	rjmp	.+0      	; 0x7cc <main+0x80>
 7cc:	00 00       	nop
		/* Set Fast PWM, TOP in ICR1, Clear OC1A on compare match, clk/64 */
		TCCR1A = (1<<WGM11)|(1<<COM1A1);
		TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
		
	int f1=0;
	unsigned char chemcheck,val=150,ldr=0,ir=0,temp=0;
 7ce:	00 e0       	ldi	r16, 0x00	; 0
 7d0:	c1 2c       	mov	r12, r1
 7d2:	d1 2c       	mov	r13, r1
		ICR1 = 2499;		/* Set TOP count for timer1 in ICR1 register */
		/* Set Fast PWM, TOP in ICR1, Clear OC1A on compare match, clk/64 */
		TCCR1A = (1<<WGM11)|(1<<COM1A1);
		TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
		
	int f1=0;
 7d4:	c0 e0       	ldi	r28, 0x00	; 0
 7d6:	d0 e0       	ldi	r29, 0x00	; 0
						_delay_ms(100);
						uart_string("AT+CIPCLOSE\r\n");
						_delay_ms(11000);
						mydelay6();
						PORTD |= (1<<6);
						PORTB &= ~(1<<MYP2);
 7d8:	0f 2e       	mov	r0, r31
 7da:	f3 e0       	ldi	r31, 0x03	; 3
 7dc:	af 2e       	mov	r10, r31
 7de:	f0 2d       	mov	r31, r0
 7e0:	b1 2c       	mov	r11, r1
 7e2:	68 94       	set
 7e4:	88 24       	eor	r8, r8
 7e6:	81 f8       	bld	r8, 1
 7e8:	91 2c       	mov	r9, r1
			temp=getdata(5);
		}
		if(f1==0&&chemcheck==1)
		{
			PORTB |= (1<<MYP4);
			OCR1A = 525;
 7ea:	0f 2e       	mov	r0, r31
 7ec:	fd e0       	ldi	r31, 0x0D	; 13
 7ee:	ef 2e       	mov	r14, r31
 7f0:	f2 e0       	ldi	r31, 0x02	; 2
 7f2:	ff 2e       	mov	r15, r31
 7f4:	f0 2d       	mov	r31, r0
			PORTB &= ~(1<<MYP5);
			f1=1;
 7f6:	66 24       	eor	r6, r6
 7f8:	63 94       	inc	r6
 7fa:	71 2c       	mov	r7, r1
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <main+0xb6>
 7fe:	ca 2d       	mov	r28, r10
 800:	db 2d       	mov	r29, r11
			//uart_string("AT+CIPSTO=100");
			_delay_ms(5000);
   /* Replace with your application code */
    while (1) 
    {
		if(f1==0)
 802:	20 97       	sbiw	r28, 0x00	; 0
 804:	99 f4       	brne	.+38     	; 0x82c <main+0xe0>
		{
		PORTB |= (1<<MYP5);
 806:	c5 9a       	sbi	0x18, 5	; 24
		chemcheck=checkChemical();
 808:	86 de       	rcall	.-756    	; 0x516 <checkChemical>
 80a:	18 2f       	mov	r17, r24
		OCR1A = i;
 80c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 810:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 814:	9b bd       	out	0x2b, r25	; 43
 816:	8a bd       	out	0x2a, r24	; 42
		i=i-3;
 818:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 81c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 820:	03 97       	sbiw	r24, 0x03	; 3
 822:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 826:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 82a:	0e c0       	rjmp	.+28     	; 0x848 <main+0xfc>
		}
		if(f1==1)
 82c:	c1 30       	cpi	r28, 0x01	; 1
 82e:	d1 05       	cpc	r29, r1
 830:	21 f4       	brne	.+8      	; 0x83a <main+0xee>
		{
			ldr=getdata(2);
 832:	82 e0       	ldi	r24, 0x02	; 2
 834:	5e dc       	rcall	.-1860   	; 0xf2 <getdata>
 836:	d8 2e       	mov	r13, r24
 838:	0e c0       	rjmp	.+28     	; 0x856 <main+0x10a>
		}
		if(f1==2)
 83a:	c2 30       	cpi	r28, 0x02	; 2
 83c:	d1 05       	cpc	r29, r1
 83e:	21 f4       	brne	.+8      	; 0x848 <main+0xfc>
		{
			ir=getdata(4);
 840:	84 e0       	ldi	r24, 0x04	; 4
 842:	57 dc       	rcall	.-1874   	; 0xf2 <getdata>
 844:	c8 2e       	mov	r12, r24
 846:	8e c1       	rjmp	.+796    	; 0xb64 <main+0x418>
		}
		if(f1==3)
 848:	c3 30       	cpi	r28, 0x03	; 3
 84a:	d1 05       	cpc	r29, r1
 84c:	21 f4       	brne	.+8      	; 0x856 <main+0x10a>
		{
			temp=getdata(5);
 84e:	85 e0       	ldi	r24, 0x05	; 5
 850:	50 dc       	rcall	.-1888   	; 0xf2 <getdata>
 852:	08 2f       	mov	r16, r24
 854:	c2 c1       	rjmp	.+900    	; 0xbda <main+0x48e>
		}
		if(f1==0&&chemcheck==1)
 856:	20 97       	sbiw	r28, 0x00	; 0
 858:	49 f4       	brne	.+18     	; 0x86c <main+0x120>
 85a:	11 30       	cpi	r17, 0x01	; 1
 85c:	91 f6       	brne	.-92     	; 0x802 <main+0xb6>
		{
			PORTB |= (1<<MYP4);
 85e:	c4 9a       	sbi	0x18, 4	; 24
			OCR1A = 525;
 860:	fb bc       	out	0x2b, r15	; 43
 862:	ea bc       	out	0x2a, r14	; 42
			PORTB &= ~(1<<MYP5);
 864:	c5 98       	cbi	0x18, 5	; 24
			f1=1;
 866:	c6 2d       	mov	r28, r6
 868:	d7 2d       	mov	r29, r7
 86a:	cb cf       	rjmp	.-106    	; 0x802 <main+0xb6>
		}
		else if(f1==1&&ldr>50)
 86c:	c1 30       	cpi	r28, 0x01	; 1
 86e:	d1 05       	cpc	r29, r1
 870:	09 f0       	breq	.+2      	; 0x874 <main+0x128>
 872:	75 c1       	rjmp	.+746    	; 0xb5e <main+0x412>
 874:	22 e3       	ldi	r18, 0x32	; 50
 876:	2d 15       	cp	r18, r13
 878:	20 f6       	brcc	.-120    	; 0x802 <main+0xb6>
		{
			PORTB |= (1<<MYP0);
 87a:	c0 9a       	sbi	0x18, 0	; 24
 87c:	8f eb       	ldi	r24, 0xBF	; 191
 87e:	91 e9       	ldi	r25, 0x91	; 145
 880:	21 e2       	ldi	r18, 0x21	; 33
 882:	81 50       	subi	r24, 0x01	; 1
 884:	90 40       	sbci	r25, 0x00	; 0
 886:	20 40       	sbci	r18, 0x00	; 0
 888:	e1 f7       	brne	.-8      	; 0x882 <main+0x136>
 88a:	00 c0       	rjmp	.+0      	; 0x88c <main+0x140>
 88c:	00 00       	nop
 88e:	8f eb       	ldi	r24, 0xBF	; 191
 890:	91 e9       	ldi	r25, 0x91	; 145
 892:	21 e2       	ldi	r18, 0x21	; 33
 894:	81 50       	subi	r24, 0x01	; 1
 896:	90 40       	sbci	r25, 0x00	; 0
 898:	20 40       	sbci	r18, 0x00	; 0
 89a:	e1 f7       	brne	.-8      	; 0x894 <main+0x148>
 89c:	00 c0       	rjmp	.+0      	; 0x89e <main+0x152>
 89e:	00 00       	nop
 8a0:	8f eb       	ldi	r24, 0xBF	; 191
 8a2:	91 e9       	ldi	r25, 0x91	; 145
 8a4:	21 e2       	ldi	r18, 0x21	; 33
 8a6:	81 50       	subi	r24, 0x01	; 1
 8a8:	90 40       	sbci	r25, 0x00	; 0
 8aa:	20 40       	sbci	r18, 0x00	; 0
 8ac:	e1 f7       	brne	.-8      	; 0x8a6 <main+0x15a>
 8ae:	00 c0       	rjmp	.+0      	; 0x8b0 <main+0x164>
 8b0:	00 00       	nop
 8b2:	8f eb       	ldi	r24, 0xBF	; 191
 8b4:	91 e9       	ldi	r25, 0x91	; 145
 8b6:	21 e2       	ldi	r18, 0x21	; 33
 8b8:	81 50       	subi	r24, 0x01	; 1
 8ba:	90 40       	sbci	r25, 0x00	; 0
 8bc:	20 40       	sbci	r18, 0x00	; 0
 8be:	e1 f7       	brne	.-8      	; 0x8b8 <main+0x16c>
 8c0:	00 c0       	rjmp	.+0      	; 0x8c2 <main+0x176>
 8c2:	00 00       	nop
 8c4:	8f eb       	ldi	r24, 0xBF	; 191
 8c6:	91 e9       	ldi	r25, 0x91	; 145
 8c8:	21 e2       	ldi	r18, 0x21	; 33
 8ca:	81 50       	subi	r24, 0x01	; 1
 8cc:	90 40       	sbci	r25, 0x00	; 0
 8ce:	20 40       	sbci	r18, 0x00	; 0
 8d0:	e1 f7       	brne	.-8      	; 0x8ca <main+0x17e>
 8d2:	00 c0       	rjmp	.+0      	; 0x8d4 <main+0x188>
 8d4:	00 00       	nop
 8d6:	8f eb       	ldi	r24, 0xBF	; 191
 8d8:	91 e9       	ldi	r25, 0x91	; 145
 8da:	21 e2       	ldi	r18, 0x21	; 33
 8dc:	81 50       	subi	r24, 0x01	; 1
 8de:	90 40       	sbci	r25, 0x00	; 0
 8e0:	20 40       	sbci	r18, 0x00	; 0
 8e2:	e1 f7       	brne	.-8      	; 0x8dc <main+0x190>
 8e4:	00 c0       	rjmp	.+0      	; 0x8e6 <main+0x19a>
 8e6:	00 00       	nop
 8e8:	8f eb       	ldi	r24, 0xBF	; 191
 8ea:	91 e9       	ldi	r25, 0x91	; 145
 8ec:	21 e2       	ldi	r18, 0x21	; 33
 8ee:	81 50       	subi	r24, 0x01	; 1
 8f0:	90 40       	sbci	r25, 0x00	; 0
 8f2:	20 40       	sbci	r18, 0x00	; 0
 8f4:	e1 f7       	brne	.-8      	; 0x8ee <main+0x1a2>
 8f6:	00 c0       	rjmp	.+0      	; 0x8f8 <main+0x1ac>
 8f8:	00 00       	nop
 8fa:	8f eb       	ldi	r24, 0xBF	; 191
 8fc:	91 e9       	ldi	r25, 0x91	; 145
 8fe:	21 e2       	ldi	r18, 0x21	; 33
 900:	81 50       	subi	r24, 0x01	; 1
 902:	90 40       	sbci	r25, 0x00	; 0
 904:	20 40       	sbci	r18, 0x00	; 0
 906:	e1 f7       	brne	.-8      	; 0x900 <main+0x1b4>
 908:	00 c0       	rjmp	.+0      	; 0x90a <main+0x1be>
 90a:	00 00       	nop
 90c:	8f eb       	ldi	r24, 0xBF	; 191
 90e:	91 e9       	ldi	r25, 0x91	; 145
 910:	21 e2       	ldi	r18, 0x21	; 33
 912:	81 50       	subi	r24, 0x01	; 1
 914:	90 40       	sbci	r25, 0x00	; 0
 916:	20 40       	sbci	r18, 0x00	; 0
 918:	e1 f7       	brne	.-8      	; 0x912 <main+0x1c6>
 91a:	00 c0       	rjmp	.+0      	; 0x91c <main+0x1d0>
 91c:	00 00       	nop
 91e:	8f eb       	ldi	r24, 0xBF	; 191
 920:	91 e9       	ldi	r25, 0x91	; 145
 922:	21 e2       	ldi	r18, 0x21	; 33
 924:	81 50       	subi	r24, 0x01	; 1
 926:	90 40       	sbci	r25, 0x00	; 0
 928:	20 40       	sbci	r18, 0x00	; 0
 92a:	e1 f7       	brne	.-8      	; 0x924 <main+0x1d8>
 92c:	00 c0       	rjmp	.+0      	; 0x92e <main+0x1e2>
 92e:	00 00       	nop
 930:	8f eb       	ldi	r24, 0xBF	; 191
 932:	91 e9       	ldi	r25, 0x91	; 145
 934:	21 e2       	ldi	r18, 0x21	; 33
 936:	81 50       	subi	r24, 0x01	; 1
 938:	90 40       	sbci	r25, 0x00	; 0
 93a:	20 40       	sbci	r18, 0x00	; 0
 93c:	e1 f7       	brne	.-8      	; 0x936 <main+0x1ea>
 93e:	00 c0       	rjmp	.+0      	; 0x940 <main+0x1f4>
 940:	00 00       	nop
 942:	8f eb       	ldi	r24, 0xBF	; 191
 944:	91 e9       	ldi	r25, 0x91	; 145
 946:	21 e2       	ldi	r18, 0x21	; 33
 948:	81 50       	subi	r24, 0x01	; 1
 94a:	90 40       	sbci	r25, 0x00	; 0
 94c:	20 40       	sbci	r18, 0x00	; 0
 94e:	e1 f7       	brne	.-8      	; 0x948 <main+0x1fc>
 950:	00 c0       	rjmp	.+0      	; 0x952 <main+0x206>
 952:	00 00       	nop
 954:	8f eb       	ldi	r24, 0xBF	; 191
 956:	91 e9       	ldi	r25, 0x91	; 145
 958:	21 e2       	ldi	r18, 0x21	; 33
 95a:	81 50       	subi	r24, 0x01	; 1
 95c:	90 40       	sbci	r25, 0x00	; 0
 95e:	20 40       	sbci	r18, 0x00	; 0
 960:	e1 f7       	brne	.-8      	; 0x95a <main+0x20e>
 962:	00 c0       	rjmp	.+0      	; 0x964 <main+0x218>
 964:	00 00       	nop
 966:	8f eb       	ldi	r24, 0xBF	; 191
 968:	91 e9       	ldi	r25, 0x91	; 145
 96a:	21 e2       	ldi	r18, 0x21	; 33
 96c:	81 50       	subi	r24, 0x01	; 1
 96e:	90 40       	sbci	r25, 0x00	; 0
 970:	20 40       	sbci	r18, 0x00	; 0
 972:	e1 f7       	brne	.-8      	; 0x96c <main+0x220>
 974:	00 c0       	rjmp	.+0      	; 0x976 <main+0x22a>
 976:	00 00       	nop
 978:	8f eb       	ldi	r24, 0xBF	; 191
 97a:	91 e9       	ldi	r25, 0x91	; 145
 97c:	21 e2       	ldi	r18, 0x21	; 33
 97e:	81 50       	subi	r24, 0x01	; 1
 980:	90 40       	sbci	r25, 0x00	; 0
 982:	20 40       	sbci	r18, 0x00	; 0
 984:	e1 f7       	brne	.-8      	; 0x97e <main+0x232>
 986:	00 c0       	rjmp	.+0      	; 0x988 <main+0x23c>
 988:	00 00       	nop
 98a:	8f eb       	ldi	r24, 0xBF	; 191
 98c:	91 e9       	ldi	r25, 0x91	; 145
 98e:	21 e2       	ldi	r18, 0x21	; 33
 990:	81 50       	subi	r24, 0x01	; 1
 992:	90 40       	sbci	r25, 0x00	; 0
 994:	20 40       	sbci	r18, 0x00	; 0
 996:	e1 f7       	brne	.-8      	; 0x990 <main+0x244>
 998:	00 c0       	rjmp	.+0      	; 0x99a <main+0x24e>
 99a:	00 00       	nop
 99c:	8f eb       	ldi	r24, 0xBF	; 191
 99e:	91 e9       	ldi	r25, 0x91	; 145
 9a0:	21 e2       	ldi	r18, 0x21	; 33
 9a2:	81 50       	subi	r24, 0x01	; 1
 9a4:	90 40       	sbci	r25, 0x00	; 0
 9a6:	20 40       	sbci	r18, 0x00	; 0
 9a8:	e1 f7       	brne	.-8      	; 0x9a2 <main+0x256>
 9aa:	00 c0       	rjmp	.+0      	; 0x9ac <main+0x260>
 9ac:	00 00       	nop
 9ae:	8f eb       	ldi	r24, 0xBF	; 191
 9b0:	91 e9       	ldi	r25, 0x91	; 145
 9b2:	21 e2       	ldi	r18, 0x21	; 33
 9b4:	81 50       	subi	r24, 0x01	; 1
 9b6:	90 40       	sbci	r25, 0x00	; 0
 9b8:	20 40       	sbci	r18, 0x00	; 0
 9ba:	e1 f7       	brne	.-8      	; 0x9b4 <main+0x268>
 9bc:	00 c0       	rjmp	.+0      	; 0x9be <main+0x272>
 9be:	00 00       	nop
 9c0:	8f eb       	ldi	r24, 0xBF	; 191
 9c2:	91 e9       	ldi	r25, 0x91	; 145
 9c4:	21 e2       	ldi	r18, 0x21	; 33
 9c6:	81 50       	subi	r24, 0x01	; 1
 9c8:	90 40       	sbci	r25, 0x00	; 0
 9ca:	20 40       	sbci	r18, 0x00	; 0
 9cc:	e1 f7       	brne	.-8      	; 0x9c6 <main+0x27a>
 9ce:	00 c0       	rjmp	.+0      	; 0x9d0 <main+0x284>
 9d0:	00 00       	nop
 9d2:	8f eb       	ldi	r24, 0xBF	; 191
 9d4:	91 e9       	ldi	r25, 0x91	; 145
 9d6:	21 e2       	ldi	r18, 0x21	; 33
 9d8:	81 50       	subi	r24, 0x01	; 1
 9da:	90 40       	sbci	r25, 0x00	; 0
 9dc:	20 40       	sbci	r18, 0x00	; 0
 9de:	e1 f7       	brne	.-8      	; 0x9d8 <main+0x28c>
 9e0:	00 c0       	rjmp	.+0      	; 0x9e2 <main+0x296>
 9e2:	00 00       	nop
 9e4:	8f eb       	ldi	r24, 0xBF	; 191
 9e6:	91 e9       	ldi	r25, 0x91	; 145
 9e8:	21 e2       	ldi	r18, 0x21	; 33
 9ea:	81 50       	subi	r24, 0x01	; 1
 9ec:	90 40       	sbci	r25, 0x00	; 0
 9ee:	20 40       	sbci	r18, 0x00	; 0
 9f0:	e1 f7       	brne	.-8      	; 0x9ea <main+0x29e>
 9f2:	00 c0       	rjmp	.+0      	; 0x9f4 <main+0x2a8>
 9f4:	00 00       	nop
 9f6:	8f eb       	ldi	r24, 0xBF	; 191
 9f8:	91 e9       	ldi	r25, 0x91	; 145
 9fa:	21 e2       	ldi	r18, 0x21	; 33
 9fc:	81 50       	subi	r24, 0x01	; 1
 9fe:	90 40       	sbci	r25, 0x00	; 0
 a00:	20 40       	sbci	r18, 0x00	; 0
 a02:	e1 f7       	brne	.-8      	; 0x9fc <main+0x2b0>
 a04:	00 c0       	rjmp	.+0      	; 0xa06 <main+0x2ba>
 a06:	00 00       	nop
 a08:	8f eb       	ldi	r24, 0xBF	; 191
 a0a:	91 e9       	ldi	r25, 0x91	; 145
 a0c:	21 e2       	ldi	r18, 0x21	; 33
 a0e:	81 50       	subi	r24, 0x01	; 1
 a10:	90 40       	sbci	r25, 0x00	; 0
 a12:	20 40       	sbci	r18, 0x00	; 0
 a14:	e1 f7       	brne	.-8      	; 0xa0e <main+0x2c2>
 a16:	00 c0       	rjmp	.+0      	; 0xa18 <main+0x2cc>
 a18:	00 00       	nop
 a1a:	8f eb       	ldi	r24, 0xBF	; 191
 a1c:	91 e9       	ldi	r25, 0x91	; 145
 a1e:	21 e2       	ldi	r18, 0x21	; 33
 a20:	81 50       	subi	r24, 0x01	; 1
 a22:	90 40       	sbci	r25, 0x00	; 0
 a24:	20 40       	sbci	r18, 0x00	; 0
 a26:	e1 f7       	brne	.-8      	; 0xa20 <main+0x2d4>
 a28:	00 c0       	rjmp	.+0      	; 0xa2a <main+0x2de>
 a2a:	00 00       	nop
 a2c:	8f eb       	ldi	r24, 0xBF	; 191
 a2e:	91 e9       	ldi	r25, 0x91	; 145
 a30:	21 e2       	ldi	r18, 0x21	; 33
 a32:	81 50       	subi	r24, 0x01	; 1
 a34:	90 40       	sbci	r25, 0x00	; 0
 a36:	20 40       	sbci	r18, 0x00	; 0
 a38:	e1 f7       	brne	.-8      	; 0xa32 <main+0x2e6>
 a3a:	00 c0       	rjmp	.+0      	; 0xa3c <main+0x2f0>
 a3c:	00 00       	nop
 a3e:	8f eb       	ldi	r24, 0xBF	; 191
 a40:	91 e9       	ldi	r25, 0x91	; 145
 a42:	21 e2       	ldi	r18, 0x21	; 33
 a44:	81 50       	subi	r24, 0x01	; 1
 a46:	90 40       	sbci	r25, 0x00	; 0
 a48:	20 40       	sbci	r18, 0x00	; 0
 a4a:	e1 f7       	brne	.-8      	; 0xa44 <main+0x2f8>
 a4c:	00 c0       	rjmp	.+0      	; 0xa4e <main+0x302>
 a4e:	00 00       	nop
 a50:	8f eb       	ldi	r24, 0xBF	; 191
 a52:	91 e9       	ldi	r25, 0x91	; 145
 a54:	21 e2       	ldi	r18, 0x21	; 33
 a56:	81 50       	subi	r24, 0x01	; 1
 a58:	90 40       	sbci	r25, 0x00	; 0
 a5a:	20 40       	sbci	r18, 0x00	; 0
 a5c:	e1 f7       	brne	.-8      	; 0xa56 <main+0x30a>
 a5e:	00 c0       	rjmp	.+0      	; 0xa60 <main+0x314>
 a60:	00 00       	nop
 a62:	8f eb       	ldi	r24, 0xBF	; 191
 a64:	91 e9       	ldi	r25, 0x91	; 145
 a66:	21 e2       	ldi	r18, 0x21	; 33
 a68:	81 50       	subi	r24, 0x01	; 1
 a6a:	90 40       	sbci	r25, 0x00	; 0
 a6c:	20 40       	sbci	r18, 0x00	; 0
 a6e:	e1 f7       	brne	.-8      	; 0xa68 <main+0x31c>
 a70:	00 c0       	rjmp	.+0      	; 0xa72 <main+0x326>
 a72:	00 00       	nop
 a74:	8f eb       	ldi	r24, 0xBF	; 191
 a76:	91 e9       	ldi	r25, 0x91	; 145
 a78:	21 e2       	ldi	r18, 0x21	; 33
 a7a:	81 50       	subi	r24, 0x01	; 1
 a7c:	90 40       	sbci	r25, 0x00	; 0
 a7e:	20 40       	sbci	r18, 0x00	; 0
 a80:	e1 f7       	brne	.-8      	; 0xa7a <main+0x32e>
 a82:	00 c0       	rjmp	.+0      	; 0xa84 <main+0x338>
 a84:	00 00       	nop
 a86:	8f eb       	ldi	r24, 0xBF	; 191
 a88:	91 e9       	ldi	r25, 0x91	; 145
 a8a:	21 e2       	ldi	r18, 0x21	; 33
 a8c:	81 50       	subi	r24, 0x01	; 1
 a8e:	90 40       	sbci	r25, 0x00	; 0
 a90:	20 40       	sbci	r18, 0x00	; 0
 a92:	e1 f7       	brne	.-8      	; 0xa8c <main+0x340>
 a94:	00 c0       	rjmp	.+0      	; 0xa96 <main+0x34a>
 a96:	00 00       	nop
 a98:	8f eb       	ldi	r24, 0xBF	; 191
 a9a:	91 e9       	ldi	r25, 0x91	; 145
 a9c:	21 e2       	ldi	r18, 0x21	; 33
 a9e:	81 50       	subi	r24, 0x01	; 1
 aa0:	90 40       	sbci	r25, 0x00	; 0
 aa2:	20 40       	sbci	r18, 0x00	; 0
 aa4:	e1 f7       	brne	.-8      	; 0xa9e <main+0x352>
 aa6:	00 c0       	rjmp	.+0      	; 0xaa8 <main+0x35c>
 aa8:	00 00       	nop
 aaa:	8f eb       	ldi	r24, 0xBF	; 191
 aac:	91 e9       	ldi	r25, 0x91	; 145
 aae:	21 e2       	ldi	r18, 0x21	; 33
 ab0:	81 50       	subi	r24, 0x01	; 1
 ab2:	90 40       	sbci	r25, 0x00	; 0
 ab4:	20 40       	sbci	r18, 0x00	; 0
 ab6:	e1 f7       	brne	.-8      	; 0xab0 <main+0x364>
 ab8:	00 c0       	rjmp	.+0      	; 0xaba <main+0x36e>
 aba:	00 00       	nop
 abc:	8f eb       	ldi	r24, 0xBF	; 191
 abe:	91 e9       	ldi	r25, 0x91	; 145
 ac0:	21 e2       	ldi	r18, 0x21	; 33
 ac2:	81 50       	subi	r24, 0x01	; 1
 ac4:	90 40       	sbci	r25, 0x00	; 0
 ac6:	20 40       	sbci	r18, 0x00	; 0
 ac8:	e1 f7       	brne	.-8      	; 0xac2 <main+0x376>
 aca:	00 c0       	rjmp	.+0      	; 0xacc <main+0x380>
 acc:	00 00       	nop
 ace:	8f eb       	ldi	r24, 0xBF	; 191
 ad0:	91 e9       	ldi	r25, 0x91	; 145
 ad2:	21 e2       	ldi	r18, 0x21	; 33
 ad4:	81 50       	subi	r24, 0x01	; 1
 ad6:	90 40       	sbci	r25, 0x00	; 0
 ad8:	20 40       	sbci	r18, 0x00	; 0
 ada:	e1 f7       	brne	.-8      	; 0xad4 <main+0x388>
 adc:	00 c0       	rjmp	.+0      	; 0xade <main+0x392>
 ade:	00 00       	nop
 ae0:	8f eb       	ldi	r24, 0xBF	; 191
 ae2:	91 e9       	ldi	r25, 0x91	; 145
 ae4:	21 e2       	ldi	r18, 0x21	; 33
 ae6:	81 50       	subi	r24, 0x01	; 1
 ae8:	90 40       	sbci	r25, 0x00	; 0
 aea:	20 40       	sbci	r18, 0x00	; 0
 aec:	e1 f7       	brne	.-8      	; 0xae6 <main+0x39a>
 aee:	00 c0       	rjmp	.+0      	; 0xaf0 <main+0x3a4>
 af0:	00 00       	nop
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
	_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);_delay_ms(11000);
	
			uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 af2:	82 e6       	ldi	r24, 0x62	; 98
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	c0 da       	rcall	.-2688   	; 0x78 <uart_string>
 af8:	8f e7       	ldi	r24, 0x7F	; 127
 afa:	9a e1       	ldi	r25, 0x1A	; 26
 afc:	26 e0       	ldi	r18, 0x06	; 6
 afe:	81 50       	subi	r24, 0x01	; 1
 b00:	90 40       	sbci	r25, 0x00	; 0
 b02:	20 40       	sbci	r18, 0x00	; 0
 b04:	e1 f7       	brne	.-8      	; 0xafe <main+0x3b2>
 b06:	00 c0       	rjmp	.+0      	; 0xb08 <main+0x3bc>
 b08:	00 00       	nop
			_delay_ms(2000);
			uart_string("AT+CIPSEND=51\r\n");
 b0a:	8e e8       	ldi	r24, 0x8E	; 142
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	b4 da       	rcall	.-2712   	; 0x78 <uart_string>
 b10:	87 ea       	ldi	r24, 0xA7	; 167
 b12:	91 e6       	ldi	r25, 0x61	; 97
 b14:	01 97       	sbiw	r24, 0x01	; 1
 b16:	f1 f7       	brne	.-4      	; 0xb14 <main+0x3c8>
 b18:	00 c0       	rjmp	.+0      	; 0xb1a <main+0x3ce>
 b1a:	00 00       	nop
			_delay_ms(100);
			uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field4=");
 b1c:	89 e4       	ldi	r24, 0x49	; 73
 b1e:	91 e0       	ldi	r25, 0x01	; 1
 b20:	ab da       	rcall	.-2730   	; 0x78 <uart_string>
			uart_num(val);
 b22:	86 e9       	ldi	r24, 0x96	; 150
 b24:	bd da       	rcall	.-2694   	; 0xa0 <uart_num>
			uart_string("\r\n");
 b26:	86 e4       	ldi	r24, 0x46	; 70
 b28:	91 e0       	ldi	r25, 0x01	; 1
 b2a:	a6 da       	rcall	.-2740   	; 0x78 <uart_string>
 b2c:	87 ea       	ldi	r24, 0xA7	; 167
 b2e:	91 e6       	ldi	r25, 0x61	; 97
 b30:	01 97       	sbiw	r24, 0x01	; 1
 b32:	f1 f7       	brne	.-4      	; 0xb30 <main+0x3e4>
 b34:	00 c0       	rjmp	.+0      	; 0xb36 <main+0x3ea>
 b36:	00 00       	nop
			_delay_ms(100);
			uart_string("AT+CIPCLOSE\r\n");
 b38:	8b ec       	ldi	r24, 0xCB	; 203
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	9d da       	rcall	.-2758   	; 0x78 <uart_string>
 b3e:	9f eb       	ldi	r25, 0xBF	; 191
 b40:	21 e9       	ldi	r18, 0x91	; 145
 b42:	81 e2       	ldi	r24, 0x21	; 33
 b44:	91 50       	subi	r25, 0x01	; 1
 b46:	20 40       	sbci	r18, 0x00	; 0
 b48:	80 40       	sbci	r24, 0x00	; 0
 b4a:	e1 f7       	brne	.-8      	; 0xb44 <main+0x3f8>
 b4c:	00 c0       	rjmp	.+0      	; 0xb4e <main+0x402>
 b4e:	00 00       	nop
			_delay_ms(11000);
			mydelay6();
 b50:	a6 db       	rcall	.-2228   	; 0x29e <mydelay6>
			
			PORTB |= (1<<MYP3);
 b52:	c3 9a       	sbi	0x18, 3	; 24
			PORTB |= (1<<MYP0);
 b54:	c0 9a       	sbi	0x18, 0	; 24
			PORTB &= ~(1<<MYP4);
 b56:	c4 98       	cbi	0x18, 4	; 24
			f1=2;
 b58:	c8 2d       	mov	r28, r8
 b5a:	d9 2d       	mov	r29, r9
 b5c:	52 ce       	rjmp	.-860    	; 0x802 <main+0xb6>
		}
		else if(f1==2&&ir==35)
 b5e:	c2 30       	cpi	r28, 0x02	; 2
 b60:	d1 05       	cpc	r29, r1
 b62:	b9 f5       	brne	.+110    	; 0xbd2 <main+0x486>
 b64:	83 e2       	ldi	r24, 0x23	; 35
 b66:	c8 12       	cpse	r12, r24
 b68:	71 c0       	rjmp	.+226    	; 0xc4c <main+0x500>
		{
			PORTD |= (1<<5);
 b6a:	95 9a       	sbi	0x12, 5	; 18
			uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 b6c:	82 e6       	ldi	r24, 0x62	; 98
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	83 da       	rcall	.-2810   	; 0x78 <uart_string>
 b72:	9f e7       	ldi	r25, 0x7F	; 127
 b74:	2a e1       	ldi	r18, 0x1A	; 26
 b76:	86 e0       	ldi	r24, 0x06	; 6
 b78:	91 50       	subi	r25, 0x01	; 1
 b7a:	20 40       	sbci	r18, 0x00	; 0
 b7c:	80 40       	sbci	r24, 0x00	; 0
 b7e:	e1 f7       	brne	.-8      	; 0xb78 <main+0x42c>
 b80:	00 c0       	rjmp	.+0      	; 0xb82 <main+0x436>
 b82:	00 00       	nop
			_delay_ms(2000);
			uart_string("AT+CIPSEND=51\r\n");
 b84:	8e e8       	ldi	r24, 0x8E	; 142
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	77 da       	rcall	.-2834   	; 0x78 <uart_string>
 b8a:	87 ea       	ldi	r24, 0xA7	; 167
 b8c:	91 e6       	ldi	r25, 0x61	; 97
 b8e:	01 97       	sbiw	r24, 0x01	; 1
 b90:	f1 f7       	brne	.-4      	; 0xb8e <main+0x442>
 b92:	00 c0       	rjmp	.+0      	; 0xb94 <main+0x448>
 b94:	00 00       	nop
			_delay_ms(100);
			uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field5=");
 b96:	86 e7       	ldi	r24, 0x76	; 118
 b98:	91 e0       	ldi	r25, 0x01	; 1
 b9a:	6e da       	rcall	.-2852   	; 0x78 <uart_string>
			uart_num(ir);
 b9c:	83 e2       	ldi	r24, 0x23	; 35
 b9e:	80 da       	rcall	.-2816   	; 0xa0 <uart_num>
			uart_string("\r\n");
 ba0:	86 e4       	ldi	r24, 0x46	; 70
 ba2:	91 e0       	ldi	r25, 0x01	; 1
 ba4:	69 da       	rcall	.-2862   	; 0x78 <uart_string>
 ba6:	87 ea       	ldi	r24, 0xA7	; 167
 ba8:	91 e6       	ldi	r25, 0x61	; 97
 baa:	01 97       	sbiw	r24, 0x01	; 1
 bac:	f1 f7       	brne	.-4      	; 0xbaa <main+0x45e>
 bae:	00 c0       	rjmp	.+0      	; 0xbb0 <main+0x464>
 bb0:	00 00       	nop
			_delay_ms(100);
			uart_string("AT+CIPCLOSE\r\n");
 bb2:	8b ec       	ldi	r24, 0xCB	; 203
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	60 da       	rcall	.-2880   	; 0x78 <uart_string>
 bb8:	9f eb       	ldi	r25, 0xBF	; 191
 bba:	21 e9       	ldi	r18, 0x91	; 145
 bbc:	81 e2       	ldi	r24, 0x21	; 33
 bbe:	91 50       	subi	r25, 0x01	; 1
 bc0:	20 40       	sbci	r18, 0x00	; 0
 bc2:	80 40       	sbci	r24, 0x00	; 0
 bc4:	e1 f7       	brne	.-8      	; 0xbbe <main+0x472>
 bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <main+0x47c>
 bc8:	00 00       	nop
			_delay_ms(11000);	
			
			mydelay6();
 bca:	69 db       	rcall	.-2350   	; 0x29e <mydelay6>
			PORTB |= (1<<MYP2);
 bcc:	c2 9a       	sbi	0x18, 2	; 24
			PORTB &= ~(1<<MYP3);
 bce:	c3 98       	cbi	0x18, 3	; 24
 bd0:	04 c0       	rjmp	.+8      	; 0xbda <main+0x48e>
			f1=3;
		}
		if (f1==3&&temp>80)
 bd2:	c3 30       	cpi	r28, 0x03	; 3
 bd4:	d1 05       	cpc	r29, r1
 bd6:	09 f0       	breq	.+2      	; 0xbda <main+0x48e>
 bd8:	14 ce       	rjmp	.-984    	; 0x802 <main+0xb6>
 bda:	01 35       	cpi	r16, 0x51	; 81
 bdc:	08 f4       	brcc	.+2      	; 0xbe0 <main+0x494>
 bde:	0f ce       	rjmp	.-994    	; 0x7fe <main+0xb2>
		{
						PORTD |= (1<<6);
 be0:	96 9a       	sbi	0x12, 6	; 18
						uart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 be2:	82 e6       	ldi	r24, 0x62	; 98
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	48 da       	rcall	.-2928   	; 0x78 <uart_string>
 be8:	9f e7       	ldi	r25, 0x7F	; 127
 bea:	2a e1       	ldi	r18, 0x1A	; 26
 bec:	86 e0       	ldi	r24, 0x06	; 6
 bee:	91 50       	subi	r25, 0x01	; 1
 bf0:	20 40       	sbci	r18, 0x00	; 0
 bf2:	80 40       	sbci	r24, 0x00	; 0
 bf4:	e1 f7       	brne	.-8      	; 0xbee <main+0x4a2>
 bf6:	00 c0       	rjmp	.+0      	; 0xbf8 <main+0x4ac>
 bf8:	00 00       	nop
						_delay_ms(2000);
						uart_string("AT+CIPSEND=51\r\n");
 bfa:	8e e8       	ldi	r24, 0x8E	; 142
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	3c da       	rcall	.-2952   	; 0x78 <uart_string>
 c00:	87 ea       	ldi	r24, 0xA7	; 167
 c02:	91 e6       	ldi	r25, 0x61	; 97
 c04:	01 97       	sbiw	r24, 0x01	; 1
 c06:	f1 f7       	brne	.-4      	; 0xc04 <main+0x4b8>
 c08:	00 c0       	rjmp	.+0      	; 0xc0a <main+0x4be>
 c0a:	00 00       	nop
						_delay_ms(100);
						uart_string("GET /update?api_key=Z4B99CJDP1FQ6640&field6=");
 c0c:	83 ea       	ldi	r24, 0xA3	; 163
 c0e:	91 e0       	ldi	r25, 0x01	; 1
 c10:	33 da       	rcall	.-2970   	; 0x78 <uart_string>
						uart_num(temp);
 c12:	80 2f       	mov	r24, r16
 c14:	45 da       	rcall	.-2934   	; 0xa0 <uart_num>
						uart_string("\r\n");
 c16:	86 e4       	ldi	r24, 0x46	; 70
 c18:	91 e0       	ldi	r25, 0x01	; 1
 c1a:	2e da       	rcall	.-2980   	; 0x78 <uart_string>
 c1c:	87 ea       	ldi	r24, 0xA7	; 167
 c1e:	91 e6       	ldi	r25, 0x61	; 97
 c20:	01 97       	sbiw	r24, 0x01	; 1
 c22:	f1 f7       	brne	.-4      	; 0xc20 <main+0x4d4>
 c24:	00 c0       	rjmp	.+0      	; 0xc26 <main+0x4da>
 c26:	00 00       	nop
						_delay_ms(100);
						uart_string("AT+CIPCLOSE\r\n");
 c28:	8b ec       	ldi	r24, 0xCB	; 203
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	25 da       	rcall	.-2998   	; 0x78 <uart_string>
 c2e:	9f eb       	ldi	r25, 0xBF	; 191
 c30:	21 e9       	ldi	r18, 0x91	; 145
 c32:	81 e2       	ldi	r24, 0x21	; 33
 c34:	91 50       	subi	r25, 0x01	; 1
 c36:	20 40       	sbci	r18, 0x00	; 0
 c38:	80 40       	sbci	r24, 0x00	; 0
 c3a:	e1 f7       	brne	.-8      	; 0xc34 <main+0x4e8>
 c3c:	00 c0       	rjmp	.+0      	; 0xc3e <main+0x4f2>
 c3e:	00 00       	nop
						_delay_ms(11000);
						mydelay6();
 c40:	2e db       	rcall	.-2468   	; 0x29e <mydelay6>
						PORTD |= (1<<6);
 c42:	96 9a       	sbi	0x12, 6	; 18
						PORTB &= ~(1<<MYP2);
 c44:	c2 98       	cbi	0x18, 2	; 24
 c46:	ca 2d       	mov	r28, r10
 c48:	db 2d       	mov	r29, r11
 c4a:	db cd       	rjmp	.-1098   	; 0x802 <main+0xb6>
 c4c:	c8 2d       	mov	r28, r8
 c4e:	d9 2d       	mov	r29, r9
 c50:	d8 cd       	rjmp	.-1104   	; 0x802 <main+0xb6>

00000c52 <__subsf3>:
 c52:	50 58       	subi	r21, 0x80	; 128

00000c54 <__addsf3>:
 c54:	bb 27       	eor	r27, r27
 c56:	aa 27       	eor	r26, r26
 c58:	0e d0       	rcall	.+28     	; 0xc76 <__addsf3x>
 c5a:	4d c1       	rjmp	.+666    	; 0xef6 <__fp_round>
 c5c:	3e d1       	rcall	.+636    	; 0xeda <__fp_pscA>
 c5e:	30 f0       	brcs	.+12     	; 0xc6c <__addsf3+0x18>
 c60:	43 d1       	rcall	.+646    	; 0xee8 <__fp_pscB>
 c62:	20 f0       	brcs	.+8      	; 0xc6c <__addsf3+0x18>
 c64:	31 f4       	brne	.+12     	; 0xc72 <__addsf3+0x1e>
 c66:	9f 3f       	cpi	r25, 0xFF	; 255
 c68:	11 f4       	brne	.+4      	; 0xc6e <__addsf3+0x1a>
 c6a:	1e f4       	brtc	.+6      	; 0xc72 <__addsf3+0x1e>
 c6c:	33 c1       	rjmp	.+614    	; 0xed4 <__fp_nan>
 c6e:	0e f4       	brtc	.+2      	; 0xc72 <__addsf3+0x1e>
 c70:	e0 95       	com	r30
 c72:	e7 fb       	bst	r30, 7
 c74:	29 c1       	rjmp	.+594    	; 0xec8 <__fp_inf>

00000c76 <__addsf3x>:
 c76:	e9 2f       	mov	r30, r25
 c78:	4f d1       	rcall	.+670    	; 0xf18 <__fp_split3>
 c7a:	80 f3       	brcs	.-32     	; 0xc5c <__addsf3+0x8>
 c7c:	ba 17       	cp	r27, r26
 c7e:	62 07       	cpc	r22, r18
 c80:	73 07       	cpc	r23, r19
 c82:	84 07       	cpc	r24, r20
 c84:	95 07       	cpc	r25, r21
 c86:	18 f0       	brcs	.+6      	; 0xc8e <__addsf3x+0x18>
 c88:	71 f4       	brne	.+28     	; 0xca6 <__addsf3x+0x30>
 c8a:	9e f5       	brtc	.+102    	; 0xcf2 <__addsf3x+0x7c>
 c8c:	67 c1       	rjmp	.+718    	; 0xf5c <__fp_zero>
 c8e:	0e f4       	brtc	.+2      	; 0xc92 <__addsf3x+0x1c>
 c90:	e0 95       	com	r30
 c92:	0b 2e       	mov	r0, r27
 c94:	ba 2f       	mov	r27, r26
 c96:	a0 2d       	mov	r26, r0
 c98:	0b 01       	movw	r0, r22
 c9a:	b9 01       	movw	r22, r18
 c9c:	90 01       	movw	r18, r0
 c9e:	0c 01       	movw	r0, r24
 ca0:	ca 01       	movw	r24, r20
 ca2:	a0 01       	movw	r20, r0
 ca4:	11 24       	eor	r1, r1
 ca6:	ff 27       	eor	r31, r31
 ca8:	59 1b       	sub	r21, r25
 caa:	99 f0       	breq	.+38     	; 0xcd2 <__addsf3x+0x5c>
 cac:	59 3f       	cpi	r21, 0xF9	; 249
 cae:	50 f4       	brcc	.+20     	; 0xcc4 <__addsf3x+0x4e>
 cb0:	50 3e       	cpi	r21, 0xE0	; 224
 cb2:	68 f1       	brcs	.+90     	; 0xd0e <__addsf3x+0x98>
 cb4:	1a 16       	cp	r1, r26
 cb6:	f0 40       	sbci	r31, 0x00	; 0
 cb8:	a2 2f       	mov	r26, r18
 cba:	23 2f       	mov	r18, r19
 cbc:	34 2f       	mov	r19, r20
 cbe:	44 27       	eor	r20, r20
 cc0:	58 5f       	subi	r21, 0xF8	; 248
 cc2:	f3 cf       	rjmp	.-26     	; 0xcaa <__addsf3x+0x34>
 cc4:	46 95       	lsr	r20
 cc6:	37 95       	ror	r19
 cc8:	27 95       	ror	r18
 cca:	a7 95       	ror	r26
 ccc:	f0 40       	sbci	r31, 0x00	; 0
 cce:	53 95       	inc	r21
 cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__addsf3x+0x4e>
 cd2:	7e f4       	brtc	.+30     	; 0xcf2 <__addsf3x+0x7c>
 cd4:	1f 16       	cp	r1, r31
 cd6:	ba 0b       	sbc	r27, r26
 cd8:	62 0b       	sbc	r22, r18
 cda:	73 0b       	sbc	r23, r19
 cdc:	84 0b       	sbc	r24, r20
 cde:	ba f0       	brmi	.+46     	; 0xd0e <__addsf3x+0x98>
 ce0:	91 50       	subi	r25, 0x01	; 1
 ce2:	a1 f0       	breq	.+40     	; 0xd0c <__addsf3x+0x96>
 ce4:	ff 0f       	add	r31, r31
 ce6:	bb 1f       	adc	r27, r27
 ce8:	66 1f       	adc	r22, r22
 cea:	77 1f       	adc	r23, r23
 cec:	88 1f       	adc	r24, r24
 cee:	c2 f7       	brpl	.-16     	; 0xce0 <__addsf3x+0x6a>
 cf0:	0e c0       	rjmp	.+28     	; 0xd0e <__addsf3x+0x98>
 cf2:	ba 0f       	add	r27, r26
 cf4:	62 1f       	adc	r22, r18
 cf6:	73 1f       	adc	r23, r19
 cf8:	84 1f       	adc	r24, r20
 cfa:	48 f4       	brcc	.+18     	; 0xd0e <__addsf3x+0x98>
 cfc:	87 95       	ror	r24
 cfe:	77 95       	ror	r23
 d00:	67 95       	ror	r22
 d02:	b7 95       	ror	r27
 d04:	f7 95       	ror	r31
 d06:	9e 3f       	cpi	r25, 0xFE	; 254
 d08:	08 f0       	brcs	.+2      	; 0xd0c <__addsf3x+0x96>
 d0a:	b3 cf       	rjmp	.-154    	; 0xc72 <__addsf3+0x1e>
 d0c:	93 95       	inc	r25
 d0e:	88 0f       	add	r24, r24
 d10:	08 f0       	brcs	.+2      	; 0xd14 <__addsf3x+0x9e>
 d12:	99 27       	eor	r25, r25
 d14:	ee 0f       	add	r30, r30
 d16:	97 95       	ror	r25
 d18:	87 95       	ror	r24
 d1a:	08 95       	ret

00000d1c <__divsf3>:
 d1c:	0c d0       	rcall	.+24     	; 0xd36 <__divsf3x>
 d1e:	eb c0       	rjmp	.+470    	; 0xef6 <__fp_round>
 d20:	e3 d0       	rcall	.+454    	; 0xee8 <__fp_pscB>
 d22:	40 f0       	brcs	.+16     	; 0xd34 <__divsf3+0x18>
 d24:	da d0       	rcall	.+436    	; 0xeda <__fp_pscA>
 d26:	30 f0       	brcs	.+12     	; 0xd34 <__divsf3+0x18>
 d28:	21 f4       	brne	.+8      	; 0xd32 <__divsf3+0x16>
 d2a:	5f 3f       	cpi	r21, 0xFF	; 255
 d2c:	19 f0       	breq	.+6      	; 0xd34 <__divsf3+0x18>
 d2e:	cc c0       	rjmp	.+408    	; 0xec8 <__fp_inf>
 d30:	51 11       	cpse	r21, r1
 d32:	15 c1       	rjmp	.+554    	; 0xf5e <__fp_szero>
 d34:	cf c0       	rjmp	.+414    	; 0xed4 <__fp_nan>

00000d36 <__divsf3x>:
 d36:	f0 d0       	rcall	.+480    	; 0xf18 <__fp_split3>
 d38:	98 f3       	brcs	.-26     	; 0xd20 <__divsf3+0x4>

00000d3a <__divsf3_pse>:
 d3a:	99 23       	and	r25, r25
 d3c:	c9 f3       	breq	.-14     	; 0xd30 <__divsf3+0x14>
 d3e:	55 23       	and	r21, r21
 d40:	b1 f3       	breq	.-20     	; 0xd2e <__divsf3+0x12>
 d42:	95 1b       	sub	r25, r21
 d44:	55 0b       	sbc	r21, r21
 d46:	bb 27       	eor	r27, r27
 d48:	aa 27       	eor	r26, r26
 d4a:	62 17       	cp	r22, r18
 d4c:	73 07       	cpc	r23, r19
 d4e:	84 07       	cpc	r24, r20
 d50:	38 f0       	brcs	.+14     	; 0xd60 <__divsf3_pse+0x26>
 d52:	9f 5f       	subi	r25, 0xFF	; 255
 d54:	5f 4f       	sbci	r21, 0xFF	; 255
 d56:	22 0f       	add	r18, r18
 d58:	33 1f       	adc	r19, r19
 d5a:	44 1f       	adc	r20, r20
 d5c:	aa 1f       	adc	r26, r26
 d5e:	a9 f3       	breq	.-22     	; 0xd4a <__divsf3_pse+0x10>
 d60:	33 d0       	rcall	.+102    	; 0xdc8 <__divsf3_pse+0x8e>
 d62:	0e 2e       	mov	r0, r30
 d64:	3a f0       	brmi	.+14     	; 0xd74 <__divsf3_pse+0x3a>
 d66:	e0 e8       	ldi	r30, 0x80	; 128
 d68:	30 d0       	rcall	.+96     	; 0xdca <__divsf3_pse+0x90>
 d6a:	91 50       	subi	r25, 0x01	; 1
 d6c:	50 40       	sbci	r21, 0x00	; 0
 d6e:	e6 95       	lsr	r30
 d70:	00 1c       	adc	r0, r0
 d72:	ca f7       	brpl	.-14     	; 0xd66 <__divsf3_pse+0x2c>
 d74:	29 d0       	rcall	.+82     	; 0xdc8 <__divsf3_pse+0x8e>
 d76:	fe 2f       	mov	r31, r30
 d78:	27 d0       	rcall	.+78     	; 0xdc8 <__divsf3_pse+0x8e>
 d7a:	66 0f       	add	r22, r22
 d7c:	77 1f       	adc	r23, r23
 d7e:	88 1f       	adc	r24, r24
 d80:	bb 1f       	adc	r27, r27
 d82:	26 17       	cp	r18, r22
 d84:	37 07       	cpc	r19, r23
 d86:	48 07       	cpc	r20, r24
 d88:	ab 07       	cpc	r26, r27
 d8a:	b0 e8       	ldi	r27, 0x80	; 128
 d8c:	09 f0       	breq	.+2      	; 0xd90 <__divsf3_pse+0x56>
 d8e:	bb 0b       	sbc	r27, r27
 d90:	80 2d       	mov	r24, r0
 d92:	bf 01       	movw	r22, r30
 d94:	ff 27       	eor	r31, r31
 d96:	93 58       	subi	r25, 0x83	; 131
 d98:	5f 4f       	sbci	r21, 0xFF	; 255
 d9a:	2a f0       	brmi	.+10     	; 0xda6 <__divsf3_pse+0x6c>
 d9c:	9e 3f       	cpi	r25, 0xFE	; 254
 d9e:	51 05       	cpc	r21, r1
 da0:	68 f0       	brcs	.+26     	; 0xdbc <__divsf3_pse+0x82>
 da2:	92 c0       	rjmp	.+292    	; 0xec8 <__fp_inf>
 da4:	dc c0       	rjmp	.+440    	; 0xf5e <__fp_szero>
 da6:	5f 3f       	cpi	r21, 0xFF	; 255
 da8:	ec f3       	brlt	.-6      	; 0xda4 <__divsf3_pse+0x6a>
 daa:	98 3e       	cpi	r25, 0xE8	; 232
 dac:	dc f3       	brlt	.-10     	; 0xda4 <__divsf3_pse+0x6a>
 dae:	86 95       	lsr	r24
 db0:	77 95       	ror	r23
 db2:	67 95       	ror	r22
 db4:	b7 95       	ror	r27
 db6:	f7 95       	ror	r31
 db8:	9f 5f       	subi	r25, 0xFF	; 255
 dba:	c9 f7       	brne	.-14     	; 0xdae <__divsf3_pse+0x74>
 dbc:	88 0f       	add	r24, r24
 dbe:	91 1d       	adc	r25, r1
 dc0:	96 95       	lsr	r25
 dc2:	87 95       	ror	r24
 dc4:	97 f9       	bld	r25, 7
 dc6:	08 95       	ret
 dc8:	e1 e0       	ldi	r30, 0x01	; 1
 dca:	66 0f       	add	r22, r22
 dcc:	77 1f       	adc	r23, r23
 dce:	88 1f       	adc	r24, r24
 dd0:	bb 1f       	adc	r27, r27
 dd2:	62 17       	cp	r22, r18
 dd4:	73 07       	cpc	r23, r19
 dd6:	84 07       	cpc	r24, r20
 dd8:	ba 07       	cpc	r27, r26
 dda:	20 f0       	brcs	.+8      	; 0xde4 <__divsf3_pse+0xaa>
 ddc:	62 1b       	sub	r22, r18
 dde:	73 0b       	sbc	r23, r19
 de0:	84 0b       	sbc	r24, r20
 de2:	ba 0b       	sbc	r27, r26
 de4:	ee 1f       	adc	r30, r30
 de6:	88 f7       	brcc	.-30     	; 0xdca <__divsf3_pse+0x90>
 de8:	e0 95       	com	r30
 dea:	08 95       	ret

00000dec <__fixsfsi>:
 dec:	04 d0       	rcall	.+8      	; 0xdf6 <__fixunssfsi>
 dee:	68 94       	set
 df0:	b1 11       	cpse	r27, r1
 df2:	b5 c0       	rjmp	.+362    	; 0xf5e <__fp_szero>
 df4:	08 95       	ret

00000df6 <__fixunssfsi>:
 df6:	98 d0       	rcall	.+304    	; 0xf28 <__fp_splitA>
 df8:	88 f0       	brcs	.+34     	; 0xe1c <__fixunssfsi+0x26>
 dfa:	9f 57       	subi	r25, 0x7F	; 127
 dfc:	90 f0       	brcs	.+36     	; 0xe22 <__fixunssfsi+0x2c>
 dfe:	b9 2f       	mov	r27, r25
 e00:	99 27       	eor	r25, r25
 e02:	b7 51       	subi	r27, 0x17	; 23
 e04:	a0 f0       	brcs	.+40     	; 0xe2e <__fixunssfsi+0x38>
 e06:	d1 f0       	breq	.+52     	; 0xe3c <__fixunssfsi+0x46>
 e08:	66 0f       	add	r22, r22
 e0a:	77 1f       	adc	r23, r23
 e0c:	88 1f       	adc	r24, r24
 e0e:	99 1f       	adc	r25, r25
 e10:	1a f0       	brmi	.+6      	; 0xe18 <__fixunssfsi+0x22>
 e12:	ba 95       	dec	r27
 e14:	c9 f7       	brne	.-14     	; 0xe08 <__fixunssfsi+0x12>
 e16:	12 c0       	rjmp	.+36     	; 0xe3c <__fixunssfsi+0x46>
 e18:	b1 30       	cpi	r27, 0x01	; 1
 e1a:	81 f0       	breq	.+32     	; 0xe3c <__fixunssfsi+0x46>
 e1c:	9f d0       	rcall	.+318    	; 0xf5c <__fp_zero>
 e1e:	b1 e0       	ldi	r27, 0x01	; 1
 e20:	08 95       	ret
 e22:	9c c0       	rjmp	.+312    	; 0xf5c <__fp_zero>
 e24:	67 2f       	mov	r22, r23
 e26:	78 2f       	mov	r23, r24
 e28:	88 27       	eor	r24, r24
 e2a:	b8 5f       	subi	r27, 0xF8	; 248
 e2c:	39 f0       	breq	.+14     	; 0xe3c <__fixunssfsi+0x46>
 e2e:	b9 3f       	cpi	r27, 0xF9	; 249
 e30:	cc f3       	brlt	.-14     	; 0xe24 <__fixunssfsi+0x2e>
 e32:	86 95       	lsr	r24
 e34:	77 95       	ror	r23
 e36:	67 95       	ror	r22
 e38:	b3 95       	inc	r27
 e3a:	d9 f7       	brne	.-10     	; 0xe32 <__fixunssfsi+0x3c>
 e3c:	3e f4       	brtc	.+14     	; 0xe4c <__fixunssfsi+0x56>
 e3e:	90 95       	com	r25
 e40:	80 95       	com	r24
 e42:	70 95       	com	r23
 e44:	61 95       	neg	r22
 e46:	7f 4f       	sbci	r23, 0xFF	; 255
 e48:	8f 4f       	sbci	r24, 0xFF	; 255
 e4a:	9f 4f       	sbci	r25, 0xFF	; 255
 e4c:	08 95       	ret

00000e4e <__floatunsisf>:
 e4e:	e8 94       	clt
 e50:	09 c0       	rjmp	.+18     	; 0xe64 <__floatsisf+0x12>

00000e52 <__floatsisf>:
 e52:	97 fb       	bst	r25, 7
 e54:	3e f4       	brtc	.+14     	; 0xe64 <__floatsisf+0x12>
 e56:	90 95       	com	r25
 e58:	80 95       	com	r24
 e5a:	70 95       	com	r23
 e5c:	61 95       	neg	r22
 e5e:	7f 4f       	sbci	r23, 0xFF	; 255
 e60:	8f 4f       	sbci	r24, 0xFF	; 255
 e62:	9f 4f       	sbci	r25, 0xFF	; 255
 e64:	99 23       	and	r25, r25
 e66:	a9 f0       	breq	.+42     	; 0xe92 <__floatsisf+0x40>
 e68:	f9 2f       	mov	r31, r25
 e6a:	96 e9       	ldi	r25, 0x96	; 150
 e6c:	bb 27       	eor	r27, r27
 e6e:	93 95       	inc	r25
 e70:	f6 95       	lsr	r31
 e72:	87 95       	ror	r24
 e74:	77 95       	ror	r23
 e76:	67 95       	ror	r22
 e78:	b7 95       	ror	r27
 e7a:	f1 11       	cpse	r31, r1
 e7c:	f8 cf       	rjmp	.-16     	; 0xe6e <__floatsisf+0x1c>
 e7e:	fa f4       	brpl	.+62     	; 0xebe <__floatsisf+0x6c>
 e80:	bb 0f       	add	r27, r27
 e82:	11 f4       	brne	.+4      	; 0xe88 <__floatsisf+0x36>
 e84:	60 ff       	sbrs	r22, 0
 e86:	1b c0       	rjmp	.+54     	; 0xebe <__floatsisf+0x6c>
 e88:	6f 5f       	subi	r22, 0xFF	; 255
 e8a:	7f 4f       	sbci	r23, 0xFF	; 255
 e8c:	8f 4f       	sbci	r24, 0xFF	; 255
 e8e:	9f 4f       	sbci	r25, 0xFF	; 255
 e90:	16 c0       	rjmp	.+44     	; 0xebe <__floatsisf+0x6c>
 e92:	88 23       	and	r24, r24
 e94:	11 f0       	breq	.+4      	; 0xe9a <__floatsisf+0x48>
 e96:	96 e9       	ldi	r25, 0x96	; 150
 e98:	11 c0       	rjmp	.+34     	; 0xebc <__floatsisf+0x6a>
 e9a:	77 23       	and	r23, r23
 e9c:	21 f0       	breq	.+8      	; 0xea6 <__floatsisf+0x54>
 e9e:	9e e8       	ldi	r25, 0x8E	; 142
 ea0:	87 2f       	mov	r24, r23
 ea2:	76 2f       	mov	r23, r22
 ea4:	05 c0       	rjmp	.+10     	; 0xeb0 <__floatsisf+0x5e>
 ea6:	66 23       	and	r22, r22
 ea8:	71 f0       	breq	.+28     	; 0xec6 <__floatsisf+0x74>
 eaa:	96 e8       	ldi	r25, 0x86	; 134
 eac:	86 2f       	mov	r24, r22
 eae:	70 e0       	ldi	r23, 0x00	; 0
 eb0:	60 e0       	ldi	r22, 0x00	; 0
 eb2:	2a f0       	brmi	.+10     	; 0xebe <__floatsisf+0x6c>
 eb4:	9a 95       	dec	r25
 eb6:	66 0f       	add	r22, r22
 eb8:	77 1f       	adc	r23, r23
 eba:	88 1f       	adc	r24, r24
 ebc:	da f7       	brpl	.-10     	; 0xeb4 <__floatsisf+0x62>
 ebe:	88 0f       	add	r24, r24
 ec0:	96 95       	lsr	r25
 ec2:	87 95       	ror	r24
 ec4:	97 f9       	bld	r25, 7
 ec6:	08 95       	ret

00000ec8 <__fp_inf>:
 ec8:	97 f9       	bld	r25, 7
 eca:	9f 67       	ori	r25, 0x7F	; 127
 ecc:	80 e8       	ldi	r24, 0x80	; 128
 ece:	70 e0       	ldi	r23, 0x00	; 0
 ed0:	60 e0       	ldi	r22, 0x00	; 0
 ed2:	08 95       	ret

00000ed4 <__fp_nan>:
 ed4:	9f ef       	ldi	r25, 0xFF	; 255
 ed6:	80 ec       	ldi	r24, 0xC0	; 192
 ed8:	08 95       	ret

00000eda <__fp_pscA>:
 eda:	00 24       	eor	r0, r0
 edc:	0a 94       	dec	r0
 ede:	16 16       	cp	r1, r22
 ee0:	17 06       	cpc	r1, r23
 ee2:	18 06       	cpc	r1, r24
 ee4:	09 06       	cpc	r0, r25
 ee6:	08 95       	ret

00000ee8 <__fp_pscB>:
 ee8:	00 24       	eor	r0, r0
 eea:	0a 94       	dec	r0
 eec:	12 16       	cp	r1, r18
 eee:	13 06       	cpc	r1, r19
 ef0:	14 06       	cpc	r1, r20
 ef2:	05 06       	cpc	r0, r21
 ef4:	08 95       	ret

00000ef6 <__fp_round>:
 ef6:	09 2e       	mov	r0, r25
 ef8:	03 94       	inc	r0
 efa:	00 0c       	add	r0, r0
 efc:	11 f4       	brne	.+4      	; 0xf02 <__fp_round+0xc>
 efe:	88 23       	and	r24, r24
 f00:	52 f0       	brmi	.+20     	; 0xf16 <__fp_round+0x20>
 f02:	bb 0f       	add	r27, r27
 f04:	40 f4       	brcc	.+16     	; 0xf16 <__fp_round+0x20>
 f06:	bf 2b       	or	r27, r31
 f08:	11 f4       	brne	.+4      	; 0xf0e <__fp_round+0x18>
 f0a:	60 ff       	sbrs	r22, 0
 f0c:	04 c0       	rjmp	.+8      	; 0xf16 <__fp_round+0x20>
 f0e:	6f 5f       	subi	r22, 0xFF	; 255
 f10:	7f 4f       	sbci	r23, 0xFF	; 255
 f12:	8f 4f       	sbci	r24, 0xFF	; 255
 f14:	9f 4f       	sbci	r25, 0xFF	; 255
 f16:	08 95       	ret

00000f18 <__fp_split3>:
 f18:	57 fd       	sbrc	r21, 7
 f1a:	90 58       	subi	r25, 0x80	; 128
 f1c:	44 0f       	add	r20, r20
 f1e:	55 1f       	adc	r21, r21
 f20:	59 f0       	breq	.+22     	; 0xf38 <__fp_splitA+0x10>
 f22:	5f 3f       	cpi	r21, 0xFF	; 255
 f24:	71 f0       	breq	.+28     	; 0xf42 <__fp_splitA+0x1a>
 f26:	47 95       	ror	r20

00000f28 <__fp_splitA>:
 f28:	88 0f       	add	r24, r24
 f2a:	97 fb       	bst	r25, 7
 f2c:	99 1f       	adc	r25, r25
 f2e:	61 f0       	breq	.+24     	; 0xf48 <__fp_splitA+0x20>
 f30:	9f 3f       	cpi	r25, 0xFF	; 255
 f32:	79 f0       	breq	.+30     	; 0xf52 <__fp_splitA+0x2a>
 f34:	87 95       	ror	r24
 f36:	08 95       	ret
 f38:	12 16       	cp	r1, r18
 f3a:	13 06       	cpc	r1, r19
 f3c:	14 06       	cpc	r1, r20
 f3e:	55 1f       	adc	r21, r21
 f40:	f2 cf       	rjmp	.-28     	; 0xf26 <__fp_split3+0xe>
 f42:	46 95       	lsr	r20
 f44:	f1 df       	rcall	.-30     	; 0xf28 <__fp_splitA>
 f46:	08 c0       	rjmp	.+16     	; 0xf58 <__fp_splitA+0x30>
 f48:	16 16       	cp	r1, r22
 f4a:	17 06       	cpc	r1, r23
 f4c:	18 06       	cpc	r1, r24
 f4e:	99 1f       	adc	r25, r25
 f50:	f1 cf       	rjmp	.-30     	; 0xf34 <__fp_splitA+0xc>
 f52:	86 95       	lsr	r24
 f54:	71 05       	cpc	r23, r1
 f56:	61 05       	cpc	r22, r1
 f58:	08 94       	sec
 f5a:	08 95       	ret

00000f5c <__fp_zero>:
 f5c:	e8 94       	clt

00000f5e <__fp_szero>:
 f5e:	bb 27       	eor	r27, r27
 f60:	66 27       	eor	r22, r22
 f62:	77 27       	eor	r23, r23
 f64:	cb 01       	movw	r24, r22
 f66:	97 f9       	bld	r25, 7
 f68:	08 95       	ret

00000f6a <__divmodhi4>:
 f6a:	97 fb       	bst	r25, 7
 f6c:	07 2e       	mov	r0, r23
 f6e:	16 f4       	brtc	.+4      	; 0xf74 <__divmodhi4+0xa>
 f70:	00 94       	com	r0
 f72:	06 d0       	rcall	.+12     	; 0xf80 <__divmodhi4_neg1>
 f74:	77 fd       	sbrc	r23, 7
 f76:	08 d0       	rcall	.+16     	; 0xf88 <__divmodhi4_neg2>
 f78:	0b d0       	rcall	.+22     	; 0xf90 <__udivmodhi4>
 f7a:	07 fc       	sbrc	r0, 7
 f7c:	05 d0       	rcall	.+10     	; 0xf88 <__divmodhi4_neg2>
 f7e:	3e f4       	brtc	.+14     	; 0xf8e <__divmodhi4_exit>

00000f80 <__divmodhi4_neg1>:
 f80:	90 95       	com	r25
 f82:	81 95       	neg	r24
 f84:	9f 4f       	sbci	r25, 0xFF	; 255
 f86:	08 95       	ret

00000f88 <__divmodhi4_neg2>:
 f88:	70 95       	com	r23
 f8a:	61 95       	neg	r22
 f8c:	7f 4f       	sbci	r23, 0xFF	; 255

00000f8e <__divmodhi4_exit>:
 f8e:	08 95       	ret

00000f90 <__udivmodhi4>:
 f90:	aa 1b       	sub	r26, r26
 f92:	bb 1b       	sub	r27, r27
 f94:	51 e1       	ldi	r21, 0x11	; 17
 f96:	07 c0       	rjmp	.+14     	; 0xfa6 <__udivmodhi4_ep>

00000f98 <__udivmodhi4_loop>:
 f98:	aa 1f       	adc	r26, r26
 f9a:	bb 1f       	adc	r27, r27
 f9c:	a6 17       	cp	r26, r22
 f9e:	b7 07       	cpc	r27, r23
 fa0:	10 f0       	brcs	.+4      	; 0xfa6 <__udivmodhi4_ep>
 fa2:	a6 1b       	sub	r26, r22
 fa4:	b7 0b       	sbc	r27, r23

00000fa6 <__udivmodhi4_ep>:
 fa6:	88 1f       	adc	r24, r24
 fa8:	99 1f       	adc	r25, r25
 faa:	5a 95       	dec	r21
 fac:	a9 f7       	brne	.-22     	; 0xf98 <__udivmodhi4_loop>
 fae:	80 95       	com	r24
 fb0:	90 95       	com	r25
 fb2:	bc 01       	movw	r22, r24
 fb4:	cd 01       	movw	r24, r26
 fb6:	08 95       	ret

00000fb8 <_exit>:
 fb8:	f8 94       	cli

00000fba <__stop_program>:
 fba:	ff cf       	rjmp	.-2      	; 0xfba <__stop_program>
